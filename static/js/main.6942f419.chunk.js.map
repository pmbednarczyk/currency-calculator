{"version":3,"sources":["redux/modules/currencies.js","redux/modules/selectedCurrencies.js","helpers/convertCurrencies.js","redux/modules/index.js","redux/store.js","components/layout/PageLayout/index.js","components/ui/Button/index.js","containers/Home/index.js","containers/Converter/pocketsMockup.js","helpers/formatCurrencyValue.js","components/ui/SelectInput/SelectInput.shapes.js","components/ui/SelectInput/index.js","components/ui/Input/Input.shapes.js","components/ui/Input/index.js","components/ui/ComboBox/index.js","containers/Converter/components/CurrencySelector/index.js","containers/Converter/components/RatesCompare/index.js","containers/Converter/index.js","routes/index.js","containers/App/index.js","serviceWorker.js","index.js","components/ui/Button/styles.module.scss","components/ui/Input/styles.module.scss","components/ui/ComboBox/styles.module.scss","containers/Converter/styles.module.scss","components/layout/PageLayout/styles.module.scss","components/ui/SelectInput/styles.module.scss","containers/Converter/components/CurrencySelector/styles.module.scss","containers/Converter/components/RatesCompare/styles.module.scss"],"names":["LOAD_CURRENCIES","LOAD_CURRENCIES_SUCCESS","LOAD_CURRENCIES_FAIL","initialState","data","isProcessing","isProcessed","currencies","state","arguments","length","undefined","action","type","Object","objectSpread","currenciesData","keys","payload","rates","map","key","value","label","CONVERT_CURRENCIES","CONVERT_CURRENCIES_SUCCESS","CONVERT_CURRENCIES_FAIL","currencyToSell","amount","currencyToBuy","exchangeRate","rate","setCurrencyValue2","currencyType","convertCurrencies","types","request","url","params","symbols","concat","base","selectedCurrencies","_action$data","formattedAmount","convertedAmount","String","includes","toFixed","convertInputValues","_action$payload$data","currencyToBuyLabel","find","el","rootReducer","combineReducers","client","axios","create","baseURL","responseType","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","PageLayout","content","this","props","react_default","a","createElement","className","styles","pageContainer","Component","Button","_ref","_classNames","children","disabled","fullWidth","primary","onClick","raiseOnInteraction","btnClassnames","classNames","defineProperty","btn","raise","defaultProps","Home","useEffect","document","body","classList","add","remove","Fragment","ui_Button","history","push","layout_PageLayout","pocketsMockup","formatCurrencyValue","Math","round","SelectInputDefaultProps","PropTypes","array","func","string","options","onChange","placeholder","SelectInput","selectInputClassnames","inputContainer","react_select_esm","newValue","InputDefaultProps","oneOfType","number","bool","isDisabled","Input","isError","formattedValue","inputClassnames","event","target","ComboBox","selectInput","input","comboBoxClassnames","comboBoxContainer","selectWrapper","ui_SelectInput","inputWrapper","ui_Input","CurrencySelector","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onCurrencySelect","selectedCurrency","updatedCurrencyData","Number","updateCurrencyData","onAmountChange","currencyAmount","currencyData","setState","setCurrencyValue","getSelectedCurrencyValue","currency","getAvailableCurrencies","availablePockets","filter","initialCurrency","prevProps","currencySelectorClassnames","currencySelectorContainer","ui_ComboBox","DEFAULT_REFRESH_TIME","RatesCompare","getCurrencyRates","_this$props$selectedC","interval","clearInterval","setInterval","renderCurrenciesRatio","isEmpty","_this$props$selectedC2","_prevProps$selectedCu","prevCurrencyToSell","prevCurrencyToBuy","ratesCompareClassnames","ratesCompareContainer","Converter","loadCurrencies","converterContainer","screenContainer","components_CurrencySelector","components_RatesCompare","mapDispatchToProps","dispatch","getState","newLabel","isCurrencyToSell","_state$selectedCurren","currencyToCompare","currenciesToConvert","toSell","toBuy","then","routes","path","component","exact","connect","App","Helmet_default","defaultTitle","title","titleTemplate","Switch","route","index","Route","assign","PureComponent","withRouter","Boolean","location","hostname","match","store","preloadedState","createStore","applyMiddleware","axiosMiddleware","thunk","createClientStore","ReactDOM","render","es","HashRouter","react_router_scroll_4_es","containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","gradientAnimation"],"mappings":"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","file":"static/js/main.6942f419.chunk.js","sourcesContent":["const LOAD_CURRENCIES = ' currencies/LOAD_CURRENCIES';\r\nconst LOAD_CURRENCIES_SUCCESS = 'currencies/LOAD_CURRENCIES_SUCCESS';\r\nconst LOAD_CURRENCIES_FAIL = 'currencies/LOAD_CURRENCIES_FAIL';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  isProcessing: false,\r\n  isProcessed: false,\r\n};\r\n\r\nconst currencies = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CURRENCIES:\r\n      return { ...state, isProcessing: true };\r\n    case LOAD_CURRENCIES_SUCCESS: {\r\n      const currenciesData = Object.keys(action.payload.data.rates)\r\n        .map(key => ({ value: action.payload.data.rates[key], label: key }));\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: true, data: currenciesData,\r\n      };\r\n    }\r\n    case LOAD_CURRENCIES_FAIL:\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function loadCurrencies() {\r\n  return {\r\n    types: [LOAD_CURRENCIES, LOAD_CURRENCIES_SUCCESS, LOAD_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default currencies;\r\n","import convertInputValues from '../../helpers/convertCurrencies';\r\n\r\nconst SET_CURRENCY_DATA = 'selectedCurrencies/SET_CURRENCY_DATA';\r\nconst CONVERT_CURRENCIES = ' selectedCurrencies/CONVERT_CURRENCIES';\r\nconst CONVERT_CURRENCIES_SUCCESS = 'selectedCurrencies/CONVERT_CURRENCIES_SUCCESS';\r\nconst CONVERT_CURRENCIES_FAIL = 'selectedCurrencies/CONVERT_CURRENCIES_FAIL';\r\n\r\nconst CURRENCY_TO_SELL = 'currencyToSell';\r\nconst CURRENCY_TO_BUY = 'currencyToBuy';\r\n\r\nconst initialState = {\r\n  currencyToSell: {\r\n    label: '',\r\n    amount: 0,\r\n  },\r\n  currencyToBuy: {\r\n    label: '',\r\n    amount: 0,\r\n  },\r\n  exchangeRate: {\r\n    isProcessing: false,\r\n    isProcessed: false,\r\n    currencyToSell: {\r\n      label: '',\r\n      rate: 0,\r\n    },\r\n    currencyToBuy: {\r\n      label: '',\r\n      rate: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst selectedCurrencies = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_CURRENCY_DATA: {\r\n      const { label, amount } = action.data;\r\n      const { exchangeRate } = state;\r\n      // const formattedAmount = convertInputValues(exchangeRate.rates, currencyToSell, currencyToBuy, action.currencyType, amount);\r\n      const formattedAmount = convertInputValues(exchangeRate, label, action.currencyType, amount);\r\n\r\n  /*    const getObjectData = (actionCurrencyType, currencyType, data) => {\r\n        const isMatch = actionCurrencyType === currencyType;\r\n\r\n        return ({\r\n          label: isMatch ? data.label : state[actionCurrencyType].label,\r\n          amount: isMatch ? data.amount : formattedAmount,\r\n        });\r\n      };\r\n\r\n\r\n      const getCurrenciesInputFormattedData = () => ({\r\n        currencyToSell: getObjectData(action.currencyType, CURRENCY_TO_SELL, action.data),\r\n        currencyToBuy: getObjectData(action.currencyType, CURRENCY_TO_BUY, action.data),\r\n      });\r\n\r\n      return { ...state, ...getCurrenciesInputFormattedData() };*/\r\n\r\n\r\n      // debugger;\r\n      const getCurrenciesInputFormattedData = () => ({\r\n        currencyToSell: {\r\n          ...state.currencyToSell,\r\n          label: action.currencyType === CURRENCY_TO_SELL ? label : state.currencyToSell.label,\r\n          amount: action.currencyType === CURRENCY_TO_SELL ? amount : formattedAmount,\r\n        },\r\n        currencyToBuy: {\r\n          ...state.currencyToBuy,\r\n          label: action.currencyType === CURRENCY_TO_BUY ? label : state.currencyToBuy.label,\r\n          amount: action.currencyType === CURRENCY_TO_BUY ? amount : formattedAmount,\r\n        },\r\n      });\r\n\r\n      return { ...state, ...getCurrenciesInputFormattedData() };\r\n\r\n      // return { ...state, [action.currencyType]: { label, amount } };\r\n    }\r\n    case CONVERT_CURRENCIES:\r\n      return { ...state, exchangeRate: { ...state.exchangeRate, isProcessing: true } };\r\n    case CONVERT_CURRENCIES_SUCCESS: {\r\n      const { rates, base } = action.payload.data;\r\n      const getCurrencyToBuyLabel = () => Object.keys(rates).find(el => el !== base);\r\n      const currencyToBuyLabel = getCurrencyToBuyLabel();\r\n\r\n      return {\r\n        ...state,\r\n        exchangeRate: {\r\n          isProcessing: false,\r\n          isProcessed: true,\r\n          currencyToSell: {\r\n            ...state.exchangeRate.currencyToSell,\r\n            label: base,\r\n            rate: rates[base],\r\n          },\r\n          currencyToBuy: {\r\n            ...state.exchangeRate.currencyToBuy,\r\n            label: currencyToBuyLabel,\r\n            rate: rates[currencyToBuyLabel],\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case CONVERT_CURRENCIES_FAIL:\r\n      return {\r\n        ...state, exchangeRate: { ...initialState.exchangeRate, isProcessing: false, isProcessed: false },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCurrencyValue2 = (currencyType, data) => ({\r\n  type: SET_CURRENCY_DATA,\r\n  currencyType,\r\n  data,\r\n});\r\n\r\n\r\nexport function convertCurrencies(currencyToSell, currencyToBuy) {\r\n  return {\r\n    types: [CONVERT_CURRENCIES, CONVERT_CURRENCIES_SUCCESS, CONVERT_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n        params: {\r\n          symbols: `${currencyToSell},${currencyToBuy}`,\r\n          base: currencyToSell,\r\n        },\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport const setCurrencyValue = (currencyType, data) => (dispatch, getState) => {\r\n  const state = getState();\r\n  const { label: newLabel } = data;\r\n  const isCurrencyToSell = currencyType === 'currencyToSell';\r\n  const { currencyToSell, currencyToBuy } = state.selectedCurrencies.exchangeRate;\r\n  const currencyToCompare = isCurrencyToSell ? currencyToSell.label : currencyToBuy.label;\r\n  const isDifferentLabel = (currencyToSell.label && currencyToBuy.label)\r\n    && (currencyToCompare !== newLabel);\r\n\r\n  if (isDifferentLabel) {\r\n    const currenciesToConvert = {\r\n      toSell: isCurrencyToSell ? newLabel : currencyToSell.label,\r\n      toBuy: !isCurrencyToSell ? newLabel : currencyToBuy.label,\r\n    };\r\n\r\n    return dispatch(convertCurrencies(currenciesToConvert.toSell, currenciesToConvert.toBuy)).then(() => {\r\n      dispatch(setCurrencyValue2(currencyType, data));\r\n    });\r\n  }\r\n\r\n  return dispatch(setCurrencyValue2(currencyType, data));\r\n};\r\n\r\n\r\nexport default selectedCurrencies;\r\n","export default (rates, label, currencyType, amount) => {\r\n  if (!amount) return '';\r\n  const { rate } = rates.currencyToBuy;\r\n  let convertedAmount;\r\n\r\n  if (currencyType === 'currencyToSell') {\r\n    convertedAmount = amount * rate;\r\n  }\r\n\r\n  if (currencyType === 'currencyToBuy') {\r\n    convertedAmount = amount / rate;\r\n  }\r\n\r\n  if (String(convertedAmount).includes('.')) return convertedAmount.toFixed(2);\r\n\r\n  return convertedAmount;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport currencies from './currencies';\r\nimport selectedCurrencies from './selectedCurrencies';\r\n\r\nconst rootReducer = combineReducers({\r\n  currencies,\r\n  selectedCurrencies,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport axios from 'axios';\r\nimport thunk from 'redux-thunk';\r\nimport axiosMiddleware from 'redux-axios-middleware';\r\nimport rootReducer from './modules';\r\n\r\nconst client = axios.create({\r\n  baseURL: 'https://api.exchangeratesapi.io/',\r\n  responseType: 'json',\r\n});\r\n\r\nconst composeEnhancers =\r\n  (  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ) ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nexport const createClientStore = (preloadedState = {}) => {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(axiosMiddleware(client), thunk)),\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nclass PageLayout extends Component {\r\n  render() {\r\n    const { content } = this.props;\r\n\r\n    return (\r\n      <div className={styles.pageContainer}>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Button = (\r\n  {\r\n    children,\r\n    disabled,\r\n    fullWidth,\r\n    primary,\r\n    onClick,\r\n    raiseOnInteraction,\r\n  },\r\n) => {\r\n  const btnClassnames = classNames({\r\n    [styles.btn]: true,\r\n    [styles.primary]: primary,\r\n    [styles.disabled]: disabled,\r\n    [styles.fullWidth]: fullWidth,\r\n    [styles.raise]: raiseOnInteraction,\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className={btnClassnames}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n  primary: PropTypes.bool,\r\n  raiseOnInteraction: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  fullWidth: false,\r\n  primary: false,\r\n  raiseOnInteraction: false,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport Button from '../../components/ui/Button';\r\n\r\nconst CONVERTER_URL = '/converter';\r\n\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    document.body.classList.add('animatedBg');\r\n\r\n    return () => {\r\n      document.body.classList.remove('animatedBg');\r\n    };\r\n  });\r\n\r\n  const content = (\r\n    <React.Fragment>\r\n      <h1>Ladies and gentlemans...</h1>\r\n      <p>I would like to present you the currencies converter!</p>\r\n      <Button\r\n        raiseOnInteraction\r\n        primary\r\n        onClick={() => props.history.push(CONVERTER_URL)}\r\n      >\r\n        SEE THE DEVICE\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <PageLayout content={content} />\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","export default [{\r\n  label: 'USD',\r\n  value: 1210,\r\n}, {\r\n  label: 'PLN',\r\n  value: 2847,\r\n}, {\r\n  label: 'SEK',\r\n  value: 60689,\r\n}, {\r\n  label: 'GBP',\r\n  value: 56,\r\n}, {\r\n  label: 'MXN',\r\n  value: 3200,\r\n}, {\r\n  label: 'THB',\r\n  value: 269200,\r\n}, {\r\n  label: 'CZK',\r\n  value: 6200,\r\n}];\r\n","export default (value) => {\r\n  if (!value) return null;\r\n\r\n  return Math.round(value * 100) / 100;\r\n\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  options: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport const SelectInputDefaultProps = {\r\n  options: [],\r\n  onChange: () => {},\r\n  placeholder: '',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Select from 'react-select';\r\n\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from './SelectInput.shapes';\r\nimport styles from './styles.module.scss';\r\n\r\nconst SelectInput = (\r\n  {\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    value,\r\n  },\r\n) => {\r\n  const selectInputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n  });\r\n\r\n  return (\r\n    <div className={selectInputClassnames}>\r\n      <Select\r\n        options={options}\r\n        onChange={newValue => onChange(newValue)}\r\n        placeholder={placeholder}\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = { ...SelectInputPropTypes };\r\nSelectInput.defaultProps = { ...SelectInputDefaultProps };\r\n\r\nexport default SelectInput;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n  isDisabled: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport const InputDefaultProps = {\r\n  onChange: () => {},\r\n  value: '',\r\n  isDisabled: true,\r\n  placeholder: '',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport InputPropTypes, { InputDefaultProps } from './Input.shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst Input = (\r\n  {\r\n    onChange,\r\n    isError,\r\n    type,\r\n    value: formattedValue,\r\n    placeholder,\r\n    isDisabled,\r\n  },\r\n) => {\r\n  const inputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n    [styles.isError]: isError,\r\n    [styles.isDisabled]: isDisabled,\r\n  });\r\n\r\n  const onInputChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    return onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={inputClassnames}>\r\n      <input\r\n        onChange={onInputChange}\r\n        value={formattedValue}\r\n        placeholder={placeholder}\r\n        disabled={isDisabled}\r\n        type={type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = { ...InputPropTypes };\r\nInput.defaultProps = { ...InputDefaultProps };\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport SelectInput from '../SelectInput';\r\nimport Input from '../Input';\r\nimport InputPropTypes, { InputDefaultProps } from '../Input/Input.shapes';\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from '../SelectInput/SelectInput.shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst ComboBox = (\r\n  {\r\n    selectInput,\r\n    input,\r\n  },\r\n) => {\r\n  const comboBoxClassnames = classNames({\r\n    [styles.comboBoxContainer]: true,\r\n  });\r\n\r\n  return (\r\n    <div className={comboBoxClassnames}>\r\n      <div className={styles.selectWrapper}>\r\n        <SelectInput {...selectInput} />\r\n      </div>\r\n      <div className={styles.inputWrapper}>\r\n        <Input {...input} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComboBox.propTypes = {\r\n  selectInput: PropTypes.shape(SelectInputPropTypes),\r\n  input: PropTypes.shape(InputPropTypes),\r\n};\r\n\r\nComboBox.defaultProps = {\r\n  selectInput: SelectInputDefaultProps,\r\n  input: InputDefaultProps,\r\n};\r\n\r\nexport default ComboBox;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport formatCurrencyValue from '../../../../helpers/formatCurrencyValue';\r\nimport ComboBox from '../../../../components/ui/ComboBox';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass CurrencySelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.currencies = this.getAvailableCurrencies();\r\n    this.state = {\r\n      selectedCurrency: props.initialCurrency,\r\n      currencyData: {\r\n        label: props.initialCurrency,\r\n        amount: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrencyValue(this.props.currencyType, this.state.currencyData);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selectedCurrencies.currencyToSell.label !== prevProps.selectedCurrencies.currencyToSell.label) {\r\n      this.currencies = this.getAvailableCurrencies();\r\n    }\r\n  }\r\n\r\n  onCurrencySelect = selectedCurrency => {\r\n    const updatedCurrencyData = { amount: Number(this.props.selectedCurrencies[this.props.currencyType].amount), label: selectedCurrency.label }\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n  }\r\n\r\n  onAmountChange = currencyAmount => {\r\n    const formattedAmount = formatCurrencyValue(currencyAmount);\r\n    const updatedCurrencyData = { ...this.state.currencyData, amount: formattedAmount }\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n  }\r\n\r\n  updateCurrencyData = updatedCurrencyData => {\r\n    this.setState({\r\n      currencyData: updatedCurrencyData,\r\n      selectedCurrency: updatedCurrencyData.label,\r\n    });\r\n\r\n    this.props.setCurrencyValue(this.props.currencyType, updatedCurrencyData);\r\n  }\r\n\r\n  getSelectedCurrencyValue = () => (\r\n    this.props.currencies.find(currency => currency.label === this.state.selectedCurrency)\r\n  )\r\n\r\n  getAvailableCurrencies = () => {\r\n    if (this.props.currencyType === 'currencyToSell') {\r\n     return  this.currencies = this.props.availablePockets\r\n    }\r\ndebugger;\r\n    return this.currencies = this.props.currencies.filter(currency => currency.label !== this.props.selectedCurrencies.currencyToSell.label);\r\n  }\r\n\r\n  render() {\r\n    const currencySelectorClassnames = classNames({\r\n      [styles.currencySelectorContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={currencySelectorClassnames}>\r\n        <ComboBox\r\n          selectInput={{\r\n            options: this.currencies,\r\n            onChange: this.onCurrencySelect,\r\n            placeholder: 'Select currency...',\r\n            value: this.getSelectedCurrencyValue()\r\n          }}\r\n          input={{\r\n            onChange: this.onAmountChange,\r\n            type: \"number\",\r\n            value: this.props.selectedCurrencies[this.props.currencyType].amount,\r\n            isDisabled: this.state.selectedCurrency.length === 0,\r\n            placeholder: 'Currency amount...',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCurrencySelector.propTypes = {\r\n  setCurrencyValue: PropTypes.func.isRequired,\r\n  initialCurrency: PropTypes.string,\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport isEmpty from 'lodash/isEmpty'\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst DEFAULT_REFRESH_TIME = 10000;\r\nconst BASE_CURRENCY_VALUE = 1;\r\n\r\nclass RatesCompare extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    const { currencyToSell, currencyToBuy } = this.props.selectedCurrencies;\r\n    const {\r\n      currencyToSell: prevCurrencyToSell,\r\n      currencyToBuy: prevCurrencyToBuy\r\n    } = prevProps.selectedCurrencies;\r\n    const isDifferentCurrency =\r\n      (currencyToSell.label !== prevCurrencyToSell.label)\r\n      || (currencyToBuy.label !== prevCurrencyToBuy.label);\r\n\r\n    if (isDifferentCurrency) this.getCurrencyRates()\r\n  }\r\n\r\n  getCurrencyRates = () => {\r\n    const { currencyToSell, currencyToBuy } = this.props.selectedCurrencies;\r\n\r\n    this.props.convertCurrencies(currencyToSell.label, currencyToBuy.label)\r\n\r\n    if (this.interval) clearInterval(this.interval);\r\n    this.interval = setInterval(() => {\r\n      this.props.convertCurrencies(currencyToSell.label, currencyToBuy.label)\r\n    }, DEFAULT_REFRESH_TIME);\r\n  }\r\n\r\n  renderCurrenciesRatio = data => {\r\n    if (isEmpty(data)) return null;\r\n    const { currencyToSell, currencyToBuy } = data;\r\n\r\n    return (\r\n      <span>\r\n        {`${currencyToSell.rate} ${currencyToSell.label} = ${ currencyToBuy.rate} ${ currencyToBuy.label}`}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const ratesCompareClassnames = classNames({\r\n      [styles.ratesCompareContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={ratesCompareClassnames}>\r\n        {this.renderCurrenciesRatio(this.props.selectedCurrencies.exchangeRate)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRatesCompare.propTypes = {\r\n  selectedCurrencies: PropTypes.shape({\r\n    currencyToSell: PropTypes.shape({\r\n      label: PropTypes.string,\r\n      amount: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n      ]),\r\n    }),\r\n    currencyToBuy: PropTypes.shape({\r\n      label: PropTypes.string,\r\n      amount: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n      ]),\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default RatesCompare;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadCurrencies } from '../../redux/modules/currencies';\r\nimport { setCurrencyValue, convertCurrencies } from '../../redux/modules/selectedCurrencies';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport availablePockets from './pocketsMockup';\r\n\r\nimport CurrencySelector from './components/CurrencySelector';\r\nimport RatesCompare from './components/RatesCompare';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass Converter extends Component {\r\n  componentDidMount() {\r\n    this.props.loadCurrencies();\r\n  }\r\n\r\n  render() {\r\n    const content = (\r\n      <div className={styles.converterContainer}>\r\n        <div className={styles.screenContainer}>\r\n          <CurrencySelector\r\n            currencies={this.props.currencies.data}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToSell\"\r\n            initialCurrency=\"USD\"\r\n            availablePockets={availablePockets}\r\n            selectedCurrencies={this.props.selectedCurrencies}\r\n          />\r\n          <RatesCompare\r\n            selectedCurrencies={this.props.selectedCurrencies}\r\n            convertCurrencies={this.props.convertCurrencies}\r\n          />\r\n          <CurrencySelector\r\n            currencies={this.props.currencies.data}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToBuy\"\r\n            initialCurrency=\"PLN\"\r\n            selectedCurrencies={this.props.selectedCurrencies}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (this.props.currencies.isProcessing || !this.props.currencies.isProcessed) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <PageLayout content={content} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  currencies,\r\n  selectedCurrencies,\r\n}) => ({\r\n  currencies,\r\n  selectedCurrencies,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadCurrencies,\r\n  setCurrencyValue,\r\n  convertCurrencies,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Converter);\r\n","import Home from '../containers/Home';\r\nimport Converter from '../containers/Converter';\r\n\r\nexport default [{\r\n  path: '/',\r\n  component: Home,\r\n  exact: true,\r\n}, {\r\n  path: '/converter',\r\n  component: Converter,\r\n  exact: true,\r\n}]\r\n","import React, { PureComponent } from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport routes from '../../routes';\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet\r\n          defaultTitle=\"Currency Calculator\"\r\n          title=\"Homepage\"\r\n          titleTemplate=\"%s | Currency Calculator\"\r\n        />\r\n        <Switch>\r\n          {routes.map(\r\n            (route, index) => <Route key={route.path || index} {...route} />)}\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport { ScrollContext } from 'react-router-scroll-4';\r\nimport './theme/index.scss';\r\nimport { createClientStore } from './redux/store';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createClientStore();\r\n\r\nReactDOM.render(\r\n  <ReduxProvider store={store}>\r\n    <HashRouter>\r\n      <ScrollContext>\r\n        <App />\r\n      </ScrollContext>\r\n    </HashRouter>\r\n  </ReduxProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2RqcC\",\"raise\":\"styles_raise__3m8gy\",\"primary\":\"styles_primary__2qAw0\",\"fullWidth\":\"styles_fullWidth__2zJvd\",\"gradientAnimation\":\"styles_gradientAnimation__sTVNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__wWuQV\",\"isDisabled\":\"styles_isDisabled__PXKe7\",\"gradientAnimation\":\"styles_gradientAnimation__3Cd-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comboBoxContainer\":\"styles_comboBoxContainer__3Tu3C\",\"selectWrapper\":\"styles_selectWrapper__1pvka\",\"inputWrapper\":\"styles_inputWrapper__1meRR\",\"gradientAnimation\":\"styles_gradientAnimation__2F96P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"converterContainer\":\"styles_converterContainer__1qTe4\",\"screenContainer\":\"styles_screenContainer__541Lo\",\"gradientAnimation\":\"styles_gradientAnimation__cEBX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"styles_pageContainer__3EdcK\",\"gradientAnimation\":\"styles_gradientAnimation__1M3Oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__dOVvq\",\"gradientAnimation\":\"styles_gradientAnimation__2zNFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencySelectorContainer\":\"styles_currencySelectorContainer__2kO6N\",\"gradientAnimation\":\"styles_gradientAnimation__hnqwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesCompareContainer\":\"styles_ratesCompareContainer__Xk4MQ\"};"],"sourceRoot":""}