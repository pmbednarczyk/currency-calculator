{"version":3,"sources":["containers/Converter/components/CurrencySelector/styles.module.scss","containers/Converter/components/RatesCompare/styles.module.scss","components/ui/Button/styles.module.scss","redux/modules/currencies.js","redux/modules/selectedCurrencies.js","helpers/convertCurrencies.js","redux/modules/pockets.js","redux/modules/index.js","redux/store.js","components/other/LoaderAnimation/index.js","components/layout/PageLayout/index.js","components/ui/Button/index.js","containers/Home/index.js","containers/Converter/shapes.js","components/other/ActionStatus/index.js","helpers/formatCurrencyValue.js","components/ui/SelectInput/shapes.js","components/ui/SelectInput/index.js","components/ui/Input/shapes.js","components/ui/Input/index.js","components/ui/ComboBox/index.js","containers/Converter/components/CurrencySelector/index.js","containers/Converter/components/RatesCompare/index.js","containers/Converter/index.js","routes/index.js","containers/App/index.js","serviceWorker.js","index.js","components/other/ActionStatus/styles.module.scss","components/ui/SelectInput/styles.module.scss","components/ui/Input/styles.module.scss","components/ui/ComboBox/styles.module.scss","containers/Converter/styles.module.scss","components/other/LoaderAnimation/styles.module.scss","components/layout/PageLayout/styles.module.scss"],"names":["module","exports","currencySelectorContainer","gradientAnimation","ratesCompareContainer","btn","raise","primary","fullWidth","disabled","LOAD_CURRENCIES","LOAD_CURRENCIES_SUCCESS","LOAD_CURRENCIES_FAIL","initialState","data","isProcessing","isProcessed","currencies","state","arguments","length","undefined","action","type","Object","objectSpread","currenciesData","keys","payload","rates","map","key","value","label","CONVERT_CURRENCIES","CONVERT_CURRENCIES_SUCCESS","CONVERT_CURRENCIES_FAIL","currencyToSell","amount","currencyToBuy","exchangeRate","rate","setInputValues","currencyType","convertCurrencies","types","request","url","params","symbols","concat","base","selectedCurrencies","_action$data","_action$data$amount","isCurrencyToSellType","isCurrencyToBuyLabelChanged","formattedAmount","currencyToSellStateAmount","convertedAmount","String","includes","Number","toFixed","convertInputValues","currencyToSellAmount","_action$payload$data","currencyToBuyLabel","find","el","status","error","successMessage","pockets","currentPockets","cloneDeep","newPocket","push","forEach","element","index","isExistingCurrency","rootReducer","combineReducers","client","axios","create","baseURL","responseType","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","LoaderAnimation","_ref","isLoading","react_default","a","createElement","className","styles","loader","loaderDots","defaultProps","PageLayout","_classNames","content","pageLayoutClassnames","classNames","defineProperty","pageContainer","fadeInContent","other_LoaderAnimation","Button","children","onClick","raiseOnInteraction","btnClassnames","Home","history","useEffect","document","body","classList","add","remove","Fragment","ui_Button","layout_PageLayout","PropTypes","shape","string","oneOfType","number","ActionStatus","actionStatusClassnames","statusContainer","success","formatCurrencyValue","Math","round","SelectInputDefaultProps","array","func","bool","options","onChange","placeholder","isDisabled","showValues","SelectInput","selectInputClassnames","inputContainer","react_select_esm","newValue","formatOptionLabel","option","_classNames2","optionClassnames","optionContainer","isOptionDisabled","InputDefaultProps","Input","isError","formattedValue","inputClassnames","event","target","ComboBox","selectInput","input","comboBoxClassnames","comboBoxContainer","selectWrapper","ui_SelectInput","inputWrapper","ui_Input","CurrencySelector","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCurrencySelect","selectedCurrency","_this$props","updatedCurrencyData","updateCurrencyData","onAmountChange","currencyAmount","currencyData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setState","setCurrencyValue","checkPocketLimit","stop","_x","apply","_this$props2","pocket","getSelectedCurrencyValue","currency","getAvailableCurrencies","_this$props3","currencyTypeToFilter","initialCurrency","prevProps","_this$props$selectedC","_prevProps$selectedCu","prevCurrencyToSell","prevCurrencyToBuy","isEqual","_this$props4","title","currencySelectorClassnames","ui_ComboBox","Component","DEFAULT_REFRESH_TIME","RatesCompare","getCurrencyRates","isInitialConvert","interval","clearInterval","setInterval","renderCurrenciesRatio","_this$props$selectedC2","_this$props$selectedC3","isDifferentCurrency","ratesCompareClassnames","Converter","loadCurrencies","isButtonDisabled","converterContainer","screenContainer","components_CurrencySelector","components_RatesCompare","buttonContainer","exchangeCurrency","other_ActionStatus","Helmet_default","mapDispatchToProps","dispatch","getState","newLabel","isCurrencyToSell","_state$selectedCurren","currencyToCompare","currenciesToConvert","toSell","toBuy","then","findCurrencyToExchange","currencyTypeLabel","newPocketCurrency","pocketCurrencyToSell","pocketCurrencyToBuy","getNewValue","pocketCurrencyValue","selectedCurrencyValue","updatedCurrencies","routes","path","component","exact","connect","withRouter","defaultTitle","titleTemplate","Switch","route","Route","assign","Boolean","location","hostname","match","store","preloadedState","createStore","applyMiddleware","axiosMiddleware","thunk","createClientStore","ReactDOM","render","es","HashRouter","react_router_scroll_4_es","containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister","bounce_loader","fadein"],"mappings":"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","file":"static/js/main.fe52a134.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencySelectorContainer\":\"styles_currencySelectorContainer__2kO6N\",\"gradientAnimation\":\"styles_gradientAnimation__hnqwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesCompareContainer\":\"styles_ratesCompareContainer__Xk4MQ\",\"gradientAnimation\":\"styles_gradientAnimation__15KmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2RqcC\",\"raise\":\"styles_raise__3m8gy\",\"primary\":\"styles_primary__2qAw0\",\"fullWidth\":\"styles_fullWidth__2zJvd\",\"disabled\":\"styles_disabled__14Os4\",\"gradientAnimation\":\"styles_gradientAnimation__sTVNa\"};","const LOAD_CURRENCIES = ' currencies/LOAD_CURRENCIES';\r\nconst LOAD_CURRENCIES_SUCCESS = 'currencies/LOAD_CURRENCIES_SUCCESS';\r\nconst LOAD_CURRENCIES_FAIL = 'currencies/LOAD_CURRENCIES_FAIL';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  isProcessing: false,\r\n  isProcessed: false,\r\n};\r\n\r\nconst currencies = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CURRENCIES:\r\n      return { ...state, isProcessing: true };\r\n    case LOAD_CURRENCIES_SUCCESS: {\r\n      const currenciesData = Object.keys(action.payload.data.rates)\r\n        .map(key => ({ value: action.payload.data.rates[key], label: key }));\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: true, data: currenciesData,\r\n      };\r\n    }\r\n    case LOAD_CURRENCIES_FAIL:\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function loadCurrencies() {\r\n  return {\r\n    types: [LOAD_CURRENCIES, LOAD_CURRENCIES_SUCCESS, LOAD_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default currencies;\r\n","import convertInputValues from '../../helpers/convertCurrencies';\r\n\r\nconst SET_CURRENCY_DATA = 'selectedCurrencies/SET_CURRENCY_DATA';\r\nconst CONVERT_CURRENCIES = ' selectedCurrencies/CONVERT_CURRENCIES';\r\nconst CONVERT_CURRENCIES_SUCCESS = 'selectedCurrencies/CONVERT_CURRENCIES_SUCCESS';\r\nconst CONVERT_CURRENCIES_FAIL = 'selectedCurrencies/CONVERT_CURRENCIES_FAIL';\r\nconst RESET_SELECTED_VALUES = 'selectedCurrencies/RESET_SELECTED_VALUES';\r\n\r\nconst CURRENCY_TO_SELL = 'currencyToSell';\r\n\r\nconst initialState = {\r\n  currencyToSell: {\r\n    label: '',\r\n    amount: '',\r\n  },\r\n  currencyToBuy: {\r\n    label: '',\r\n    amount: '',\r\n  },\r\n  exchangeRate: {\r\n    isProcessing: false,\r\n    isProcessed: false,\r\n    currencyToSell: {\r\n      label: '',\r\n      rate: 0,\r\n    },\r\n    currencyToBuy: {\r\n      label: '',\r\n      rate: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst selectedCurrencies = (state = initialState, action = {}) => {\r\n  const {\r\n    exchangeRate,\r\n    currencyToSell,\r\n    currencyToBuy,\r\n  } = state;\r\n\r\n  switch (action.type) {\r\n    case SET_CURRENCY_DATA: {\r\n      const { label, amount = '' } = action.data;\r\n      const isCurrencyToSellType = action.currencyType === CURRENCY_TO_SELL;\r\n      const isCurrencyToBuyLabelChanged = !isCurrencyToSellType && currencyToBuy.label !== label;\r\n      const formattedAmount = convertInputValues(\r\n        exchangeRate,\r\n        isCurrencyToSellType,\r\n        amount,\r\n        isCurrencyToBuyLabelChanged,\r\n        currencyToSell.amount,\r\n      );\r\n      const currencyToSellAmount = isCurrencyToBuyLabelChanged\r\n        ? currencyToSell.amount\r\n        : formattedAmount;\r\n      const getCurrenciesInputFormattedData = () => ({\r\n        currencyToSell: {\r\n          ...currencyToSell,\r\n          label: isCurrencyToSellType ? label : currencyToSell.label,\r\n          amount: isCurrencyToSellType ? amount : currencyToSellAmount,\r\n        },\r\n        currencyToBuy: {\r\n          ...currencyToBuy,\r\n          label: !isCurrencyToSellType ? label : currencyToBuy.label,\r\n          amount: (!isCurrencyToSellType && !isCurrencyToBuyLabelChanged)\r\n            ? amount\r\n            : formattedAmount,\r\n        },\r\n      });\r\n\r\n      return { ...state, ...getCurrenciesInputFormattedData() };\r\n    }\r\n    case CONVERT_CURRENCIES:\r\n      return { ...state, exchangeRate: { ...exchangeRate, isProcessing: true } };\r\n    case RESET_SELECTED_VALUES:\r\n      return {\r\n        ...state,\r\n        currencyToSell: { ...state.currencyToSell, amount: '' },\r\n        currencyToBuy: { ...state.currencyToBuy, amount: '' },\r\n      };\r\n    case CONVERT_CURRENCIES_SUCCESS: {\r\n      const { rates, base } = action.payload.data;\r\n      const getCurrencyToBuyLabel = () => Object.keys(rates).find(el => el !== base);\r\n      const currencyToBuyLabel = getCurrencyToBuyLabel();\r\n\r\n      return {\r\n        ...state,\r\n        exchangeRate: {\r\n          isProcessing: false,\r\n          isProcessed: true,\r\n          currencyToSell: {\r\n            ...exchangeRate.currencyToSell,\r\n            label: base,\r\n            rate: rates[base],\r\n          },\r\n          currencyToBuy: {\r\n            ...exchangeRate.currencyToBuy,\r\n            label: currencyToBuyLabel,\r\n            rate: rates[currencyToBuyLabel],\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case CONVERT_CURRENCIES_FAIL:\r\n      return {\r\n        ...state,\r\n        exchangeRate: {\r\n          ...initialState.exchangeRate,\r\n          isProcessing: false,\r\n          isProcessed: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setInputValues = (currencyType, data) => ({\r\n  type: SET_CURRENCY_DATA,\r\n  currencyType,\r\n  data,\r\n});\r\n\r\nexport const resetSelectedValues = () => ({\r\n  type: RESET_SELECTED_VALUES,\r\n});\r\n\r\nexport function convertCurrencies(currencyToSell, currencyToBuy) {\r\n  return {\r\n    types: [CONVERT_CURRENCIES, CONVERT_CURRENCIES_SUCCESS, CONVERT_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n        params: {\r\n          symbols: `${currencyToSell},${currencyToBuy}`,\r\n          base: currencyToSell,\r\n        },\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport const setCurrencyValue = (currencyType, data) => (dispatch, getState) => {\r\n  const state = getState();\r\n  const { label: newLabel } = data;\r\n  const isCurrencyToSell = currencyType === CURRENCY_TO_SELL;\r\n  const { currencyToSell, currencyToBuy } = state.selectedCurrencies.exchangeRate;\r\n  const currencyToCompare = isCurrencyToSell ? currencyToSell.label : currencyToBuy.label;\r\n  const isDifferentLabel = (currencyToSell.label && currencyToBuy.label)\r\n    && (currencyToCompare !== newLabel);\r\n\r\n  if (isDifferentLabel) {\r\n    const currenciesToConvert = {\r\n      toSell: isCurrencyToSell ? newLabel : currencyToSell.label,\r\n      toBuy: !isCurrencyToSell ? newLabel : currencyToBuy.label,\r\n    };\r\n\r\n    return dispatch(convertCurrencies(currenciesToConvert.toSell, currenciesToConvert.toBuy))\r\n      .then(() => dispatch(setInputValues(currencyType, data)));\r\n  }\r\n\r\n  return dispatch(setInputValues(currencyType, data));\r\n};\r\n\r\nexport default selectedCurrencies;\r\n","export default (\r\n  rates,\r\n  isCurrencyToSellType,\r\n  amount,\r\n  isCurrencyToBuyLabelChanged,\r\n  currencyToSellStateAmount,\r\n) => {\r\n  if (!amount) return '';\r\n  const { rate } = rates.currencyToBuy;\r\n  let convertedAmount;\r\n\r\n  if (isCurrencyToBuyLabelChanged) {\r\n    convertedAmount = currencyToSellStateAmount * rate;\r\n  }\r\n\r\n  if (isCurrencyToSellType && !isCurrencyToBuyLabelChanged) {\r\n    convertedAmount = amount * rate;\r\n  }\r\n\r\n  if (!isCurrencyToSellType && !isCurrencyToBuyLabelChanged) {\r\n    convertedAmount = amount / rate;\r\n  }\r\n\r\n  if (String(convertedAmount).includes('.')) return Number(convertedAmount.toFixed(2));\r\n\r\n  return Number(convertedAmount.toFixed(2));\r\n};\r\n","import cloneDeep from 'lodash/cloneDeep';\r\nimport { resetSelectedValues } from './selectedCurrencies';\r\n\r\nconst IS_OVER_LIMIT = 'pockets/IS_OVER_LIMIT';\r\nconst UPDATE_POCKET_CURRENCY = 'pockets/UPDATE_POCKET_CURRENCY';\r\n\r\nconst DEFAULT_SUCCESS_MESSAGE = 'Currencies have been successfully exchanged!';\r\nconst DEFAULT_ERROR_MESSAGE = 'Insufficient funds!';\r\n\r\nconst initialState = {\r\n  status: {\r\n    error: '',\r\n    successMessage: '',\r\n  },\r\n  data: [{\r\n    label: 'USD',\r\n    value: 1210,\r\n  }, {\r\n    label: 'PLN',\r\n    value: 5000,\r\n  }, {\r\n    label: 'GBP',\r\n    value: 156,\r\n  }, {\r\n    label: 'THB',\r\n    value: 29200,\r\n  }],\r\n};\r\n\r\nconst pockets = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case IS_OVER_LIMIT: {\r\n      return { ...state, status: { successMessage: '', error: action.data ? DEFAULT_ERROR_MESSAGE : '' } };\r\n    }\r\n    case UPDATE_POCKET_CURRENCY: {\r\n      const currentPockets = cloneDeep(state.data);\r\n      const newPocket = action.data.find(el => el.newPocket);\r\n\r\n      if (newPocket) {\r\n        currentPockets.push({ label: newPocket.label, value: newPocket.value });\r\n      }\r\n\r\n      currentPockets.forEach((element, index) => {\r\n        const isExistingCurrency = action.data.find(el => el.label === element.label);\r\n\r\n        if (isExistingCurrency) {\r\n          currentPockets[index].value = isExistingCurrency.value;\r\n        }\r\n        return null;\r\n      });\r\n      return { ...state, data: currentPockets, status: { error: '', successMessage: DEFAULT_SUCCESS_MESSAGE } };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const checkPocketLimit = data => ({\r\n  type: IS_OVER_LIMIT,\r\n  data,\r\n});\r\n\r\nexport const updatePocketCurrency = data => ({\r\n  type: UPDATE_POCKET_CURRENCY,\r\n  data,\r\n});\r\n\r\nexport const exchangeCurrency = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const { currencyToSell, currencyToBuy } = state.selectedCurrencies;\r\n  const findCurrencyToExchange = currencyTypeLabel => (\r\n    state.pockets.data.find(currency => currency.label === currencyTypeLabel)\r\n  );\r\n  const newPocketCurrency = {\r\n    label: currencyToBuy.label,\r\n    value: currencyToBuy.amount,\r\n    newPocket: true,\r\n  };\r\n  const pocketCurrencyToSell = findCurrencyToExchange(currencyToSell.label);\r\n  const pocketCurrencyToBuy = findCurrencyToExchange(currencyToBuy.label) || newPocketCurrency;\r\n  const getNewValue = (pocketCurrencyValue, selectedCurrencyValue, sum = false) => {\r\n    const value = sum\r\n      ? pocketCurrencyValue + selectedCurrencyValue\r\n      : pocketCurrencyValue - selectedCurrencyValue;\r\n\r\n    return Math.round(value * 100) / 100;\r\n  };\r\n\r\n  const updatedCurrencies = [{\r\n    ...pocketCurrencyToSell,\r\n    value: getNewValue(pocketCurrencyToSell.value, currencyToSell.amount),\r\n  }, {\r\n    ...pocketCurrencyToBuy,\r\n    value: getNewValue(pocketCurrencyToBuy.value, currencyToBuy.amount, true),\r\n  }];\r\n\r\n  dispatch(updatePocketCurrency(updatedCurrencies));\r\n  dispatch(resetSelectedValues());\r\n};\r\n\r\nexport default pockets;\r\n","import { combineReducers } from 'redux';\r\nimport currencies from './currencies';\r\nimport pockets from './pockets';\r\nimport selectedCurrencies from './selectedCurrencies';\r\n\r\nconst rootReducer = combineReducers({\r\n  currencies,\r\n  selectedCurrencies,\r\n  pockets,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport axios from 'axios';\r\nimport thunk from 'redux-thunk';\r\nimport axiosMiddleware from 'redux-axios-middleware';\r\nimport rootReducer from './modules';\r\n\r\nconst client = axios.create({\r\n  baseURL: 'https://api.exchangeratesapi.io/',\r\n  responseType: 'json',\r\n});\r\n\r\nconst composeEnhancers =\r\n  (  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ) ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nexport const createClientStore = (preloadedState = {}) => {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(axiosMiddleware(client), thunk)),\r\n  );\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.scss';\n\nconst LoaderAnimation = ({ isLoading }) => {\n  if (!isLoading) return null;\n\n  return (\n    <div className={styles.loader}>\n      <div className={styles.loaderDots} />\n    </div>\n  );\n};\n\nLoaderAnimation.defaultProps = {\n  isLoading: true,\n};\n\nLoaderAnimation.propTypes = {\n  isLoading: PropTypes.bool,\n};\n\nexport default LoaderAnimation;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport LoaderAnimation from '../../other/LoaderAnimation';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst PageLayout = ({ content, isLoading }) => {\r\n  const pageLayoutClassnames = classNames({\r\n    [styles.pageContainer]: true,\r\n    [styles.fadeInContent]: !isLoading,\r\n  });\r\n\r\n  return (\r\n    <div className={pageLayoutClassnames}>\r\n      {isLoading ? <LoaderAnimation isLoading={isLoading} /> : content }\r\n    </div>\r\n  )\r\n};\r\n\r\nPageLayout.propTypes = {\r\n  content: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]).isRequired,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nPageLayout.defaultProps = {\r\n  isLoading: false,\r\n};\r\n\r\nexport default PageLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Button = (\r\n  {\r\n    children,\r\n    disabled,\r\n    fullWidth,\r\n    primary,\r\n    onClick,\r\n    raiseOnInteraction,\r\n  },\r\n) => {\r\n  const btnClassnames = classNames({\r\n    [styles.btn]: true,\r\n    [styles.primary]: primary,\r\n    [styles.disabled]: disabled,\r\n    [styles.fullWidth]: fullWidth,\r\n    [styles.raise]: raiseOnInteraction,\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className={btnClassnames}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n  primary: PropTypes.bool,\r\n  raiseOnInteraction: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  fullWidth: false,\r\n  primary: false,\r\n  raiseOnInteraction: false,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport Button from '../../components/ui/Button';\r\n\r\nconst CONVERTER_URL = '/converter';\r\n\r\nconst Home = ({ history }) => {\r\n  useEffect(() => {\r\n    document.body.classList.add('animatedBg');\r\n\r\n    return () => {\r\n      document.body.classList.remove('animatedBg');\r\n    };\r\n  });\r\n\r\n  const content = (\r\n    <>\r\n      <h1>Ladies and gentlemen...</h1>\r\n      <p>I would like to present you the currencies converter!</p>\r\n      <Button\r\n        raiseOnInteraction\r\n        primary\r\n        onClick={() => history.push(CONVERTER_URL)}\r\n      >\r\n        SEE THE DEVICE\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <PageLayout content={content} />\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\r\n};\r\n\r\nexport default Home;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const selectedCurrenciesShapes = {\r\n  currencyToSell: PropTypes.shape({\r\n    label: PropTypes.string,\r\n    amount: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n  currencyToBuy: PropTypes.shape({\r\n    label: PropTypes.string,\r\n    amount: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './styles.module.scss';\n\nconst ActionStatus = ({ data }) => {\n  const { error, successMessage } = data;\n  if (!error && !successMessage) return null;\n\n  const actionStatusClassnames = classNames({\n    [styles.statusContainer]: true,\n    [styles.error]: error,\n    [styles.success]: successMessage,\n  });\n\n  const status = error || successMessage;\n\n  return (\n    <div className={actionStatusClassnames}>\n      <p>{status}</p>\n    </div>\n  );\n};\n\nActionStatus.defaultProps = {\n  data: {\n    error: '',\n    success: '',\n  },\n};\n\nActionStatus.propTypes = {\n  data: PropTypes.shape({\n    error: PropTypes.string,\n    successMessage: PropTypes.string,\n  }),\n};\n\nexport default ActionStatus;\n","export default (value) => {\r\n  if (!value || Number(value) <= 0) return '';\r\n\r\n  return Math.round(value * 100) / 100;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  options: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  isDisabled: PropTypes.bool,\r\n  showValues: PropTypes.bool,\r\n  value: PropTypes.shape({\r\n    label: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n};\r\n\r\nexport const SelectInputDefaultProps = {\r\n  options: [],\r\n  onChange: () => {},\r\n  placeholder: '',\r\n  isDisabled: true,\r\n  showValues: false,\r\n  value: {\r\n    label: '',\r\n    value: '',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Select from 'react-select';\r\n\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from './shapes';\r\nimport styles from './styles.module.scss';\r\n\r\nconst SelectInput = (\r\n  {\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    value,\r\n    isDisabled,\r\n    showValues,\r\n  },\r\n) => {\r\n  const selectInputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n  });\r\n\r\n  const renderOption = (option) => {\r\n    const optionClassnames = classNames({\r\n      [styles.optionContainer]: true,\r\n      [styles.disabled]: option.disabled,\r\n    });\r\n\r\n    return (\r\n      <div className={optionClassnames} key={option.label}>\r\n        {option.label}\r\n        {showValues && <span>{option.value}</span>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={selectInputClassnames}>\r\n      <Select\r\n        options={options}\r\n        onChange={newValue => onChange(newValue)}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        isDisabled={isDisabled}\r\n        formatOptionLabel={renderOption}\r\n        isOptionDisabled={option => option.disabled}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = { ...SelectInputPropTypes };\r\nSelectInput.defaultProps = { ...SelectInputDefaultProps };\r\n\r\nexport default SelectInput;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n  isDisabled: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport const InputDefaultProps = {\r\n  onChange: () => {},\r\n  value: '',\r\n  isDisabled: true,\r\n  placeholder: '',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport InputPropTypes, { InputDefaultProps } from './shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst Input = (\r\n  {\r\n    onChange,\r\n    isError,\r\n    type,\r\n    value: formattedValue,\r\n    placeholder,\r\n    isDisabled,\r\n  },\r\n) => {\r\n  const inputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n    [styles.isError]: isError,\r\n    [styles.isDisabled]: isDisabled,\r\n  });\r\n\r\n  const onInputChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    return onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={inputClassnames}>\r\n      <input\r\n        onChange={onInputChange}\r\n        value={formattedValue}\r\n        placeholder={placeholder}\r\n        disabled={isDisabled}\r\n        type={type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = { ...InputPropTypes };\r\nInput.defaultProps = { ...InputDefaultProps };\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport SelectInput from '../SelectInput';\r\nimport Input from '../Input';\r\nimport InputPropTypes, { InputDefaultProps } from '../Input/shapes';\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from '../SelectInput/shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst ComboBox = (\r\n  {\r\n    selectInput,\r\n    input,\r\n  },\r\n) => {\r\n  const comboBoxClassnames = classNames({\r\n    [styles.comboBoxContainer]: true,\r\n  });\r\n\r\n  return (\r\n    <div className={comboBoxClassnames}>\r\n      <div className={styles.selectWrapper}>\r\n        <SelectInput {...selectInput} />\r\n      </div>\r\n      <div className={styles.inputWrapper}>\r\n        <Input {...input} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComboBox.propTypes = {\r\n  selectInput: PropTypes.shape(SelectInputPropTypes),\r\n  input: PropTypes.shape(InputPropTypes),\r\n};\r\n\r\nComboBox.defaultProps = {\r\n  selectInput: SelectInputDefaultProps,\r\n  input: InputDefaultProps,\r\n};\r\n\r\nexport default ComboBox;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { selectedCurrenciesShapes } from '../../shapes';\r\nimport formatCurrencyValue from '../../../../helpers/formatCurrencyValue';\r\nimport ComboBox from '../../../../components/ui/ComboBox';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass CurrencySelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currencies: this.getAvailableCurrencies(),\r\n      selectedCurrency: props.initialCurrency,\r\n      currencyData: {\r\n        label: props.initialCurrency,\r\n        amount: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrencyValue(this.props.currencyType, this.state.currencyData);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      selectedCurrencies: {\r\n        currencyToSell,\r\n        currencyToBuy,\r\n      },\r\n    } = this.props;\r\n    const {\r\n      currencyToSell: prevCurrencyToSell,\r\n      currencyToBuy: prevCurrencyToBuy,\r\n    } = prevProps.selectedCurrencies;\r\n    if (!isEqual(currencyToSell, prevCurrencyToSell)\r\n      || !isEqual(currencyToBuy, prevCurrencyToBuy)) {\r\n      this.setState({ currencies: this.getAvailableCurrencies() });\r\n    }\r\n  }\r\n\r\n  onCurrencySelect = (selectedCurrency) => {\r\n    const { selectedCurrencies, currencyType } = this.props;\r\n    const updatedCurrencyData = {\r\n      amount: selectedCurrencies[currencyType].amount,\r\n      label: selectedCurrency.label,\r\n    };\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n  }\r\n\r\n  onAmountChange = (currencyAmount) => {\r\n    const formattedAmount = formatCurrencyValue(currencyAmount);\r\n    const updatedCurrencyData = { ...this.state.currencyData, amount: formattedAmount };\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n  }\r\n\r\n  updateCurrencyData = async (updatedCurrencyData) => {\r\n    this.setState({\r\n      currencyData: updatedCurrencyData,\r\n      selectedCurrency: updatedCurrencyData.label,\r\n    });\r\n\r\n    await this.props.setCurrencyValue(this.props.currencyType, updatedCurrencyData);\r\n    this.checkPocketLimit();\r\n  }\r\n\r\n  checkPocketLimit = () => {\r\n    const {\r\n      selectedCurrencies,\r\n      pockets,\r\n      checkPocketLimit,\r\n      currencies,\r\n    } = this.props;\r\n    const currenciesList = pockets || currencies;\r\n    const currencyToSell = currenciesList\r\n      .find(pocket => pocket.label === selectedCurrencies.currencyToSell.label);\r\n    const isPocketOverLimit = selectedCurrencies.currencyToSell.amount > currencyToSell.value;\r\n\r\n    return checkPocketLimit(isPocketOverLimit);\r\n  }\r\n\r\n  getSelectedCurrencyValue = () => (\r\n    this.props.currencies.find(currency => currency.label === this.state.selectedCurrency)\r\n  )\r\n\r\n  getAvailableCurrencies = () => {\r\n    const { currencies, selectedCurrencies, currencyType } = this.props;\r\n    const currencyTypeToFilter = currencyType === 'currencyToSell'\r\n      ? 'currencyToBuy'\r\n      : 'currencyToSell';\r\n    return currencies.map(currency => (\r\n      { ...currency, disabled: currency.label === selectedCurrencies[currencyTypeToFilter].label }\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const isDisabled = this.state.selectedCurrency.length === 0;\r\n    const {\r\n      title,\r\n      currencyType,\r\n      selectedCurrencies,\r\n      showValues,\r\n    } = this.props;\r\n    const currencySelectorClassnames = classNames({\r\n      [styles.currencySelectorContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={currencySelectorClassnames}>\r\n        {title && <p>{title}:</p>}\r\n        <ComboBox\r\n          key={this.currencies}\r\n          selectInput={{\r\n            options: this.state.currencies,\r\n            onChange: this.onCurrencySelect,\r\n            placeholder: 'Select currency...',\r\n            value: this.getSelectedCurrencyValue(),\r\n            showValues,\r\n            isDisabled,\r\n          }}\r\n          input={{\r\n            onChange: this.onAmountChange,\r\n            type: 'number',\r\n            value: selectedCurrencies[currencyType].amount,\r\n            isDisabled,\r\n            placeholder: 'Currency amount...',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCurrencySelector.propTypes = {\r\n  selectedCurrencies: PropTypes.shape({\r\n    ...selectedCurrenciesShapes,\r\n  }).isRequired,\r\n  currencies: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\r\n  setCurrencyValue: PropTypes.func.isRequired,\r\n  initialCurrency: PropTypes.string.isRequired,\r\n  currencyType: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  showValues: PropTypes.bool,\r\n};\r\n\r\nCurrencySelector.defaultProps = {\r\n  title: '',\r\n  showValues: false,\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport LoaderAnimation from '../../../../components/other/LoaderAnimation';\r\nimport { selectedCurrenciesShapes } from '../../shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst DEFAULT_REFRESH_TIME = 10000;\r\n\r\nclass RatesCompare extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      selectedCurrencies: {\r\n        currencyToSell,\r\n        currencyToBuy,\r\n      },\r\n    } = this.props;\r\n    if (currencyToSell.label && currencyToBuy.label) {\r\n      this.getCurrencyRates(true);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      selectedCurrencies: {\r\n        currencyToSell,\r\n        currencyToBuy,\r\n      },\r\n    } = this.props;\r\n    const {\r\n      currencyToSell: prevCurrencyToSell,\r\n      currencyToBuy: prevCurrencyToBuy,\r\n    } = prevProps.selectedCurrencies;\r\n    const isDifferentCurrency = (currencyToSell.label !== prevCurrencyToSell.label)\r\n      || (currencyToBuy.label !== prevCurrencyToBuy.label);\r\n    const isInitialConvert = (!prevCurrencyToSell.label\r\n      && !prevCurrencyToBuy.label)\r\n      || !this.interval;\r\n\r\n    if (isDifferentCurrency) this.getCurrencyRates(isInitialConvert);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  getCurrencyRates = (isInitialConvert) => {\r\n    const {\r\n      convertCurrencies,\r\n      selectedCurrencies: {\r\n        currencyToSell,\r\n        currencyToBuy,\r\n      },\r\n    } = this.props;\r\n\r\n    if (isInitialConvert) {\r\n      convertCurrencies(currencyToSell.label, currencyToBuy.label);\r\n    }\r\n    if (this.interval) clearInterval(this.interval);\r\n\r\n    this.interval = setInterval(() => {\r\n      convertCurrencies(currencyToSell.label, currencyToBuy.label);\r\n    }, DEFAULT_REFRESH_TIME);\r\n  }\r\n\r\n  renderCurrenciesRatio = (data) => {\r\n    const {\r\n      currencyToSell,\r\n      currencyToBuy,\r\n      isProcessing,\r\n      isProcessed,\r\n    } = data;\r\n    if (!isProcessing && !isProcessed) return null;\r\n    if (isProcessing) return <LoaderAnimation isLoading />;\r\n\r\n    return (\r\n      <span>\r\n        {`${currencyToSell.rate} ${currencyToSell.label} = ${currencyToBuy.rate} ${currencyToBuy.label}`}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const ratesCompareClassnames = classNames({\r\n      [styles.ratesCompareContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={ratesCompareClassnames}>\r\n        {this.renderCurrenciesRatio(this.props.selectedCurrencies.exchangeRate)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRatesCompare.propTypes = {\r\n  selectedCurrencies: PropTypes.shape({\r\n    ...selectedCurrenciesShapes,\r\n    exchangeRate: PropTypes.shape({\r\n      isProcessing: false,\r\n      isProcessed: false,\r\n      ...selectedCurrenciesShapes,\r\n    }),\r\n  }).isRequired,\r\n  convertCurrencies: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RatesCompare;\r\n","import React, { Component } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { selectedCurrenciesShapes } from './shapes';\r\n\r\nimport { loadCurrencies } from '../../redux/modules/currencies';\r\nimport { setCurrencyValue, convertCurrencies } from '../../redux/modules/selectedCurrencies';\r\nimport { checkPocketLimit, exchangeCurrency } from '../../redux/modules/pockets';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport Button from '../../components/ui/Button';\r\nimport ActionStatus from '../../components/other/ActionStatus';\r\n\r\nimport CurrencySelector from './components/CurrencySelector';\r\nimport RatesCompare from './components/RatesCompare';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass Converter extends Component {\r\n  componentDidMount() {\r\n    this.props.loadCurrencies();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedCurrencies,\r\n      currencies,\r\n      pockets,\r\n    } = this.props;\r\n    const isButtonDisabled = pockets.status.error || !selectedCurrencies.currencyToSell.amount;\r\n    const content = (\r\n      <div className={styles.converterContainer}>\r\n        <div className={styles.screenContainer}>\r\n          <CurrencySelector\r\n            title=\"Your currency pockets\"\r\n            currencies={pockets.data}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToSell\"\r\n            initialCurrency=\"USD\"\r\n            selectedCurrencies={selectedCurrencies}\r\n            showValues\r\n            checkPocketLimit={this.props.checkPocketLimit}\r\n          />\r\n          <RatesCompare\r\n            selectedCurrencies={selectedCurrencies}\r\n            convertCurrencies={this.props.convertCurrencies}\r\n          />\r\n          <CurrencySelector\r\n            title=\"Available currencies to buy\"\r\n            currencies={currencies.data}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToBuy\"\r\n            initialCurrency=\"PLN\"\r\n            selectedCurrencies={selectedCurrencies}\r\n            pockets={pockets.data}\r\n            checkPocketLimit={this.props.checkPocketLimit}\r\n          />\r\n          <div className={styles.buttonContainer}>\r\n            <Button\r\n              fullWidth\r\n              disabled={!!isButtonDisabled}\r\n              onClick={this.props.exchangeCurrency}\r\n            >\r\n              EXCHANGE IT!\r\n            </Button>\r\n          </div>\r\n          <ActionStatus data={pockets.status} />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (!currencies.isProcessing && !currencies.isProcessed) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Helmet title=\"Convert it!\" />\r\n        <PageLayout content={content} isLoading={currencies.isProcessing} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nConverter.propTypes = {\r\n  setCurrencyValue: PropTypes.func.isRequired,\r\n  convertCurrencies: PropTypes.func.isRequired,\r\n  loadCurrencies: PropTypes.func.isRequired,\r\n  selectedCurrencies: PropTypes.shape({\r\n    ...selectedCurrenciesShapes,\r\n  }).isRequired,\r\n  currencies: PropTypes.shape({\r\n    data: PropTypes.array,\r\n    isProcessing: PropTypes.bool,\r\n    isProcessed: PropTypes.bool,\r\n  }).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  currencies,\r\n  selectedCurrencies,\r\n  pockets,\r\n}) => ({\r\n  currencies,\r\n  selectedCurrencies,\r\n  pockets,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadCurrencies,\r\n  setCurrencyValue,\r\n  convertCurrencies,\r\n  checkPocketLimit,\r\n  exchangeCurrency,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Converter);\r\n","import Home from '../containers/Home';\r\nimport Converter from '../containers/Converter';\r\n\r\nexport default [{\r\n  path: '/',\r\n  component: Home,\r\n  exact: true,\r\n}, {\r\n  path: '/converter',\r\n  component: Converter,\r\n  exact: true,\r\n}];\r\n","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport routes from '../../routes';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Helmet\r\n      defaultTitle=\"Currency Calculator\"\r\n      title=\"Homepage\"\r\n      titleTemplate=\"%s | Currency Calculator\"\r\n    />\r\n    <Switch>\r\n      {\r\n        routes.map((route, index) => <Route key={route.path || index} {...route} />)\r\n      }\r\n    </Switch>\r\n  </>\r\n);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport { ScrollContext } from 'react-router-scroll-4';\r\nimport './theme/index.scss';\r\nimport { createClientStore } from './redux/store';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createClientStore();\r\n\r\nReactDOM.render(\r\n  <ReduxProvider store={store}>\r\n    <HashRouter>\r\n      <ScrollContext>\r\n        <App />\r\n      </ScrollContext>\r\n    </HashRouter>\r\n  </ReduxProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"styles_statusContainer__3oLPY\",\"error\":\"styles_error__3LBTI\",\"success\":\"styles_success__2AbWw\",\"gradientAnimation\":\"styles_gradientAnimation__hP9ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__dOVvq\",\"optionContainer\":\"styles_optionContainer__1Mkf1\",\"disabled\":\"styles_disabled__1EPwy\",\"gradientAnimation\":\"styles_gradientAnimation__2zNFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__wWuQV\",\"isDisabled\":\"styles_isDisabled__PXKe7\",\"gradientAnimation\":\"styles_gradientAnimation__3Cd-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comboBoxContainer\":\"styles_comboBoxContainer__3Tu3C\",\"selectWrapper\":\"styles_selectWrapper__1pvka\",\"inputWrapper\":\"styles_inputWrapper__1meRR\",\"gradientAnimation\":\"styles_gradientAnimation__2F96P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"converterContainer\":\"styles_converterContainer__1qTe4\",\"screenContainer\":\"styles_screenContainer__541Lo\",\"buttonContainer\":\"styles_buttonContainer__2EKqa\",\"gradientAnimation\":\"styles_gradientAnimation__cEBX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__MDTWx\",\"loaderDots\":\"styles_loaderDots__1_EoY\",\"bounce_loader\":\"styles_bounce_loader__oy-Gr\",\"gradientAnimation\":\"styles_gradientAnimation__HFx3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"styles_pageContainer__3EdcK\",\"fadeInContent\":\"styles_fadeInContent__1nKH5\",\"fadein\":\"styles_fadein__2WRmX\",\"gradientAnimation\":\"styles_gradientAnimation__1M3Oi\"};"],"sourceRoot":""}