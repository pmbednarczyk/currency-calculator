{"version":3,"sources":["redux/modules/currencies.js","redux/modules/selectedCurrencies.js","helpers/convertCurrencies.js","redux/modules/index.js","redux/store.js","components/layout/PageLayout/index.js","components/ui/Button/index.js","containers/Home/index.js","containers/Converter/pocketsMockup.js","helpers/formatCurrencyValue.js","components/ui/SelectInput/SelectInput.shapes.js","components/ui/SelectInput/index.js","components/ui/Input/Input.shapes.js","components/ui/Input/index.js","components/ui/ComboBox/index.js","containers/Converter/components/CurrencySelector/index.js","containers/Converter/components/RatesCompare/index.js","containers/Converter/index.js","routes/index.js","containers/App/index.js","serviceWorker.js","index.js","components/ui/Button/styles.module.scss","components/ui/Input/styles.module.scss","components/ui/ComboBox/styles.module.scss","containers/Converter/styles.module.scss","components/layout/PageLayout/styles.module.scss","components/ui/SelectInput/styles.module.scss","containers/Converter/components/CurrencySelector/styles.module.scss","containers/Converter/components/RatesCompare/styles.module.scss"],"names":["LOAD_CURRENCIES","LOAD_CURRENCIES_SUCCESS","LOAD_CURRENCIES_FAIL","initialState","data","isProcessing","isProcessed","currencies","state","arguments","length","undefined","action","type","Object","objectSpread","currenciesData","keys","payload","rates","map","key","value","label","CONVERT_CURRENCIES","CONVERT_CURRENCIES_SUCCESS","CONVERT_CURRENCIES_FAIL","currencyToSell","amount","currencyToBuy","exchangeRate","selectedCurrencies","_action$data","formattedAmount","currencyType","convertedAmount","rateValue","String","includes","toFixed","convertInputValues","rootReducer","combineReducers","client","axios","create","baseURL","responseType","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","PageLayout","content","this","props","react_default","a","createElement","className","styles","pageContainer","Component","Button","_ref","_classNames","children","disabled","fullWidth","primary","onClick","raiseOnInteraction","btnClassnames","classNames","defineProperty","btn","raise","defaultProps","Home","useEffect","document","body","classList","add","remove","Fragment","ui_Button","history","push","layout_PageLayout","pocketsMockup","formatCurrencyValue","Math","round","SelectInputDefaultProps","PropTypes","array","func","string","options","onChange","placeholder","SelectInput","selectInputClassnames","inputContainer","react_select_esm","newValue","InputDefaultProps","oneOfType","number","bool","isDisabled","Input","isError","formattedValue","inputClassnames","event","target","ComboBox","selectInput","input","comboBoxClassnames","comboBoxContainer","selectWrapper","ui_SelectInput","inputWrapper","ui_Input","CurrencySelector","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onCurrencySelect","selectedCurrency","updatedCurrencyData","currencyData","updateCurrencyData","onAmountChange","currencyAmount","convertCurrencies","setState","setCurrencyValue","getSelectedCurrencyValue","find","currency","getAvailableCurrencies","availablePockets","throttle","initialCurrency","currencySelectorClassnames","currencySelectorContainer","ui_ComboBox","DEFAULT_REFRESH_TIME","BASE_CURRENCY_VALUE","RatesCompare","getCurrencyRates","isInitialLoad","_this$props$selectedC","interval","clearInterval","setInterval","renderCurrenciesRatio","isEmpty","_this$props$selectedC2","currencyToBuyValue","concat","prevProps","_this$props$selectedC3","_prevProps$selectedCu","prevCurrencyToSell","prevCurrencyToBuy","isDifferentCurrency","ratesCompareClassnames","ratesCompareContainer","Converter","loadCurrencies","converterContainer","screenContainer","components_CurrencySelector","components_RatesCompare","mapDispatchToProps","types","request","url","params","symbols","base","routes","path","component","exact","connect","App","Helmet_default","defaultTitle","title","titleTemplate","Switch","route","index","Route","assign","PureComponent","withRouter","Boolean","location","hostname","match","store","preloadedState","createStore","applyMiddleware","axiosMiddleware","createClientStore","ReactDOM","render","es","HashRouter","react_router_scroll_4_es","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","gradientAnimation"],"mappings":"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","file":"static/js/main.cb11084b.chunk.js","sourcesContent":["const LOAD_CURRENCIES = ' currencies/LOAD_CURRENCIES';\r\nconst LOAD_CURRENCIES_SUCCESS = 'currencies/LOAD_CURRENCIES_SUCCESS';\r\nconst LOAD_CURRENCIES_FAIL = 'currencies/LOAD_CURRENCIES_FAIL';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  isProcessing: false,\r\n  isProcessed: false,\r\n};\r\n\r\nconst currencies = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CURRENCIES:\r\n      return { ...state, isProcessing: true };\r\n    case LOAD_CURRENCIES_SUCCESS: {\r\n      const currenciesData = Object.keys(action.payload.data.rates)\r\n        .map(key => ({ value: action.payload.data.rates[key], label: key }));\r\n\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: true, data: currenciesData,\r\n      };\r\n    }\r\n    case LOAD_CURRENCIES_FAIL:\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function loadCurrencies() {\r\n  return {\r\n    types: [LOAD_CURRENCIES, LOAD_CURRENCIES_SUCCESS, LOAD_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default currencies;\r\n","import convertInputValues from '../../helpers/convertCurrencies';\r\n\r\nconst SET_CURRENCY_DATA = 'selectedCurrencies/SET_CURRENCY_DATA';\r\nconst CONVERT_CURRENCIES = ' selectedCurrencies/CONVERT_CURRENCIES';\r\nconst CONVERT_CURRENCIES_SUCCESS = 'selectedCurrencies/CONVERT_CURRENCIES_SUCCESS';\r\nconst CONVERT_CURRENCIES_FAIL = 'selectedCurrencies/CONVERT_CURRENCIES_FAIL';\r\n\r\nconst CURRENCY_TO_SELL = 'currencyToSell';\r\nconst CURRENCY_TO_BUY = 'currencyToBuy';\r\n\r\nconst initialState = {\r\n  currencyToSell: {\r\n    label: '',\r\n    amount: 0,\r\n  },\r\n  currencyToBuy: {\r\n    label: '',\r\n    amount: 0,\r\n  },\r\n  exchangeRate: {\r\n    isProcessing: false,\r\n    isProcessed: false,\r\n    rates: {},\r\n  },\r\n};\r\n\r\nconst selectedCurrencies = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_CURRENCY_DATA: {\r\n      const { label, amount } = action.data;\r\n      const { exchangeRate, currencyToSell, currencyToBuy } = state;\r\n      const formattedAmount = convertInputValues(exchangeRate.rates, currencyToSell, currencyToBuy, action.currencyType, amount);\r\n\r\n\r\n  /*    const getObjectData = (actionCurrencyType, currencyType, data) => {\r\n        const isMatch = actionCurrencyType === currencyType;\r\n\r\n        return ({\r\n          label: isMatch ? data.label : state[actionCurrencyType].label,\r\n          amount: isMatch ? data.amount : formattedAmount,\r\n        });\r\n      };\r\n\r\n\r\n      const getCurrenciesInputFormattedData = () => ({\r\n        currencyToSell: getObjectData(action.currencyType, CURRENCY_TO_SELL, action.data),\r\n        currencyToBuy: getObjectData(action.currencyType, CURRENCY_TO_BUY, action.data),\r\n      });\r\n\r\n      return { ...state, ...getCurrenciesInputFormattedData() };*/\r\n\r\n\r\n\r\n      const getCurrenciesInputFormattedData = () => ({\r\n        currencyToSell: {\r\n          ...state.currencyToSell,\r\n          label: action.currencyType === CURRENCY_TO_SELL ? label : state.currencyToSell.label,\r\n          amount: action.currencyType === CURRENCY_TO_SELL ? amount : formattedAmount,\r\n        },\r\n        currencyToBuy: {\r\n          ...state.currencyToBuy,\r\n          label: action.currencyType === CURRENCY_TO_BUY ? label : state.currencyToBuy.label,\r\n          amount: action.currencyType === CURRENCY_TO_BUY ? amount : formattedAmount,\r\n        },\r\n      });\r\n\r\n      return { ...state, ...getCurrenciesInputFormattedData() };\r\n\r\n      // return { ...state, [action.currencyType]: { label, amount } };\r\n    }\r\n    case CONVERT_CURRENCIES:\r\n      return { ...state, exchangeRate: { ...state.exchangeRate, isProcessing: true } };\r\n    case CONVERT_CURRENCIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        exchangeRate: {\r\n          ...state.exchangeRate,\r\n          isProcessing: false,\r\n          isProcessed: true,\r\n          rates: action.payload.data.rates,\r\n        },\r\n      };\r\n    case CONVERT_CURRENCIES_FAIL:\r\n      return {\r\n        ...state, exchangeRate: { ...state.exchangeRate, isProcessing: false, isProcessed: false },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCurrencyValue = (currencyType, data) => ({\r\n  type: SET_CURRENCY_DATA,\r\n  currencyType,\r\n  data,\r\n});\r\n\r\nexport function convertCurrencies(currencyToSell, currencyToBuy) {\r\n  return {\r\n    types: [CONVERT_CURRENCIES, CONVERT_CURRENCIES_SUCCESS, CONVERT_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n        params: {\r\n          symbols: `${currencyToSell},${currencyToBuy}`,\r\n          base: currencyToSell,\r\n        },\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default selectedCurrencies;\r\n","export default (rates, currencyToSell, currencyToBuy, currencyType, amount) => {\r\n  if (!amount) return '';\r\n  const rateValue = rates[currencyToBuy.label];\r\n  let convertedAmount;\r\n  if (currencyType === 'currencyToSell') {\r\n    convertedAmount = amount * rateValue;\r\n  }\r\n\r\n  if (currencyType === 'currencyToBuy') {\r\n    convertedAmount = amount * rateValue;\r\n  }\r\n\r\n  if (String(convertedAmount).includes('.')) return convertedAmount.toFixed(2);\r\n\r\n  return convertedAmount;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport currencies from './currencies';\r\nimport selectedCurrencies from './selectedCurrencies';\r\n\r\nconst rootReducer = combineReducers({\r\n  currencies,\r\n  selectedCurrencies,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport axios from 'axios';\r\nimport axiosMiddleware from 'redux-axios-middleware';\r\nimport rootReducer from './modules';\r\n\r\nconst client = axios.create({\r\n  baseURL: 'https://api.exchangeratesapi.io/',\r\n  responseType: 'json',\r\n});\r\n\r\nconst composeEnhancers =\r\n  (  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ) ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nexport const createClientStore = (preloadedState = {}) => {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(axiosMiddleware(client))),\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nclass PageLayout extends Component {\r\n  render() {\r\n    const { content } = this.props;\r\n\r\n    return (\r\n      <div className={styles.pageContainer}>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Button = (\r\n  {\r\n    children,\r\n    disabled,\r\n    fullWidth,\r\n    primary,\r\n    onClick,\r\n    raiseOnInteraction,\r\n  },\r\n) => {\r\n  const btnClassnames = classNames({\r\n    [styles.btn]: true,\r\n    [styles.primary]: primary,\r\n    [styles.disabled]: disabled,\r\n    [styles.fullWidth]: fullWidth,\r\n    [styles.raise]: raiseOnInteraction,\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className={btnClassnames}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n  primary: PropTypes.bool,\r\n  raiseOnInteraction: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  fullWidth: false,\r\n  primary: false,\r\n  raiseOnInteraction: false,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport Button from '../../components/ui/Button';\r\n\r\nconst CONVERTER_URL = '/converter';\r\n\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    document.body.classList.add('animatedBg');\r\n\r\n    return () => {\r\n      document.body.classList.remove('animatedBg');\r\n    };\r\n  });\r\n\r\n  const content = (\r\n    <React.Fragment>\r\n      <h1>Ladies and gentlemans...</h1>\r\n      <p>I would like to present you the currencies converter!</p>\r\n      <Button\r\n        raiseOnInteraction\r\n        primary\r\n        onClick={() => props.history.push(CONVERTER_URL)}\r\n      >\r\n        SEE THE DEVICE\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <PageLayout content={content} />\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","export default [{\r\n  label: 'USD',\r\n  value: 1210,\r\n}, {\r\n  label: 'PLN',\r\n  value: 2847,\r\n}, {\r\n  label: 'SEK',\r\n  value: 60689,\r\n}, {\r\n  label: 'GBP',\r\n  value: 56,\r\n}, {\r\n  label: 'MXN',\r\n  value: 3200,\r\n}, {\r\n  label: 'THB',\r\n  value: 269200,\r\n}, {\r\n  label: 'CZK',\r\n  value: 6200,\r\n}];\r\n","export default (value) => {\r\n  //  const strippedTextValue = value.replace(/\\D/g, '');\r\n  // const formattedValue = strippedTextValue ? parseInt(strippedTextValue, 10) : 0;\r\n  // return formattedValue.toLocaleString('en-US');\r\n\r\n  if (value) return Math.round(value * 100) / 100;\r\n\r\n  return value;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  options: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport const SelectInputDefaultProps = {\r\n  options: [],\r\n  onChange: () => {},\r\n  placeholder: '',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Select from 'react-select';\r\n\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from './SelectInput.shapes';\r\nimport styles from './styles.module.scss';\r\n\r\nconst SelectInput = (\r\n  {\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    value,\r\n  },\r\n) => {\r\n  const selectInputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n  });\r\n\r\n  return (\r\n    <div className={selectInputClassnames}>\r\n      <Select\r\n        options={options}\r\n        onChange={newValue => onChange(newValue)}\r\n        placeholder={placeholder}\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = { ...SelectInputPropTypes };\r\nSelectInput.defaultProps = { ...SelectInputDefaultProps };\r\n\r\nexport default SelectInput;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n  isDisabled: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport const InputDefaultProps = {\r\n  onChange: () => {},\r\n  value: '',\r\n  isDisabled: true,\r\n  placeholder: '',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport InputPropTypes, { InputDefaultProps } from './Input.shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst Input = (\r\n  {\r\n    onChange,\r\n    isError,\r\n    type,\r\n    value: formattedValue,\r\n    placeholder,\r\n    isDisabled,\r\n  },\r\n) => {\r\n  const inputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n    [styles.isError]: isError,\r\n    [styles.isDisabled]: isDisabled,\r\n  });\r\n\r\n  const onInputChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    return onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={inputClassnames}>\r\n      <input\r\n        onChange={onInputChange}\r\n        value={formattedValue}\r\n        placeholder={placeholder}\r\n        disabled={isDisabled}\r\n        type={type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = { ...InputPropTypes };\r\nInput.defaultProps = { ...InputDefaultProps };\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport SelectInput from '../SelectInput';\r\nimport Input from '../Input';\r\nimport InputPropTypes, { InputDefaultProps } from '../Input/Input.shapes';\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from '../SelectInput/SelectInput.shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst ComboBox = (\r\n  {\r\n    selectInput,\r\n    input,\r\n  },\r\n) => {\r\n  const comboBoxClassnames = classNames({\r\n    [styles.comboBoxContainer]: true,\r\n  });\r\n\r\n  return (\r\n    <div className={comboBoxClassnames}>\r\n      <div className={styles.selectWrapper}>\r\n        <SelectInput {...selectInput} />\r\n      </div>\r\n      <div className={styles.inputWrapper}>\r\n        <Input {...input} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComboBox.propTypes = {\r\n  selectInput: PropTypes.shape(SelectInputPropTypes),\r\n  input: PropTypes.shape(InputPropTypes),\r\n};\r\n\r\nComboBox.defaultProps = {\r\n  selectInput: SelectInputDefaultProps,\r\n  input: InputDefaultProps,\r\n};\r\n\r\nexport default ComboBox;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport throttle from 'lodash/throttle';\r\n\r\nimport formatCurrencyValue from '../../../../helpers/formatCurrencyValue';\r\nimport ComboBox from '../../../../components/ui/ComboBox';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass CurrencySelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.currencies = this.getAvailableCurrencies();\r\n    this.convertCurrencies = throttle(this.convertCurrencies, 300);\r\n    this.state = {\r\n      selectedCurrency: props.initialCurrency,\r\n      currencyData: {\r\n        label: props.initialCurrency,\r\n        amount: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrencyValue(this.props.currencyType, this.state.currencyData);\r\n  }\r\n\r\n  onCurrencySelect = selectedCurrency => {\r\n    // TODO: Load label exchange ratio if both currencies are chosen\r\n    const updatedCurrencyData = { ...this.state.currencyData, label: selectedCurrency.label }\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n  }\r\n\r\n  onAmountChange = currencyAmount => {\r\n    const formattedAmount = formatCurrencyValue(currencyAmount);\r\n    const updatedCurrencyData = { ...this.state.currencyData, amount: formattedAmount }\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n    // this.convertCurrencies(updatedCurrencyData);\r\n  }\r\n\r\n  convertCurrencies = updatedCurrencyData => this.updateCurrencyData(updatedCurrencyData);\r\n\r\n  updateCurrencyData = updatedCurrencyData => {\r\n    this.setState({\r\n      currencyData: updatedCurrencyData,\r\n      selectedCurrency: updatedCurrencyData.label,\r\n    });\r\n\r\n    this.props.setCurrencyValue(this.props.currencyType, updatedCurrencyData);\r\n  }\r\n\r\n  getSelectedCurrencyValue = () => (\r\n    this.props.currencies.find(currency => currency.label === this.state.selectedCurrency)\r\n  )\r\n\r\n  getAvailableCurrencies = () => {\r\n    if (this.props.currencyType === 'currencyToSell') {\r\n     return  this.currencies = this.props.availablePockets\r\n    }\r\n\r\n    return this.currencies = this.props.currencies;\r\n  }\r\n\r\n  render() {\r\n    const currencySelectorClassnames = classNames({\r\n      [styles.currencySelectorContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={currencySelectorClassnames}>\r\n        <ComboBox\r\n          selectInput={{\r\n            options: this.currencies,\r\n            onChange: this.onCurrencySelect,\r\n            placeholder: 'Select currency...',\r\n            value: this.getSelectedCurrencyValue()\r\n          }}\r\n          input={{\r\n            onChange: this.onAmountChange,\r\n            type: \"number\",\r\n            // value: this.state.currencyData.amount,\r\n            value: this.props.selectedCurrencies[this.props.currencyType].amount,\r\n            isDisabled: this.state.selectedCurrency.length === 0,\r\n            placeholder: 'Currency amount...',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCurrencySelector.propTypes = {\r\n  setCurrencyValue: PropTypes.func.isRequired,\r\n  initialCurrency: PropTypes.string,\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport isEmpty from 'lodash/isEmpty'\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst DEFAULT_REFRESH_TIME = 10000;\r\nconst BASE_CURRENCY_VALUE = 1;\r\n\r\nclass RatesCompare extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    const { currencyToSell, currencyToBuy } = this.props.selectedCurrencies;\r\n    const {\r\n      currencyToSell: prevCurrencyToSell,\r\n      currencyToBuy: prevCurrencyToBuy\r\n    } = prevProps.selectedCurrencies;\r\n    const isDifferentCurrency =\r\n      (currencyToSell.label !== prevCurrencyToSell.label)\r\n      || (currencyToBuy.label !== prevCurrencyToBuy.label);\r\n    const isInitialLoad = (!prevCurrencyToSell.amount && !prevCurrencyToBuy.label)\r\n      || isDifferentCurrency;\r\n\r\n    if (isDifferentCurrency) this.getCurrencyRates(isInitialLoad)\r\n  }\r\n\r\n  getCurrencyRates = isInitialLoad  => {\r\n    const { currencyToSell, currencyToBuy } = this.props.selectedCurrencies;\r\n\r\n    if (isInitialLoad) {\r\n      this.props.convertCurrencies(currencyToSell.label, currencyToBuy.label)\r\n    }\r\n    if (this.interval) clearInterval(this.interval);\r\n    this.interval = setInterval(() => {\r\n      this.props.convertCurrencies(currencyToSell.label, currencyToBuy.label)\r\n    }, DEFAULT_REFRESH_TIME);\r\n  }\r\n\r\n  renderCurrenciesRatio = data => {\r\n    if (isEmpty(data)) return null;\r\n    const { currencyToSell, currencyToBuy } = this.props.selectedCurrencies;\r\n    const currencyToBuyValue = Object.keys(data).find(key => key === currencyToBuy.label);\r\n\r\n    return (\r\n      <span>\r\n        {`${BASE_CURRENCY_VALUE} ${currencyToSell.label} = ${data[currencyToBuy.label]} ${currencyToBuyValue}`}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const ratesCompareClassnames = classNames({\r\n      [styles.ratesCompareContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={ratesCompareClassnames}>\r\n        {this.renderCurrenciesRatio(this.props.selectedCurrencies.exchangeRate.rates)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRatesCompare.propTypes = {\r\n  selectedCurrencies: PropTypes.shape({\r\n    currencyToSell: PropTypes.shape({\r\n      label: PropTypes.string,\r\n      amount: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n      ]),\r\n    }),\r\n    currencyToBuy: PropTypes.shape({\r\n      label: PropTypes.string,\r\n      amount: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n      ]),\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default RatesCompare;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadCurrencies } from '../../redux/modules/currencies';\r\nimport { setCurrencyValue, convertCurrencies } from '../../redux/modules/selectedCurrencies';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport availablePockets from './pocketsMockup';\r\n\r\nimport CurrencySelector from './components/CurrencySelector';\r\nimport RatesCompare from './components/RatesCompare';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass Converter extends Component {\r\n  componentDidMount() {\r\n    this.props.loadCurrencies();\r\n  }\r\n\r\n  render() {\r\n    const content = (\r\n      <div className={styles.converterContainer}>\r\n        <div className={styles.screenContainer}>\r\n          <CurrencySelector\r\n            currencies={this.props.currencies.data}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToSell\"\r\n            initialCurrency=\"USD\"\r\n            availablePockets={availablePockets}\r\n            selectedCurrencies={this.props.selectedCurrencies}\r\n          />\r\n          <RatesCompare\r\n            selectedCurrencies={this.props.selectedCurrencies}\r\n            convertCurrencies={this.props.convertCurrencies}\r\n          />\r\n          <CurrencySelector\r\n            currencies={this.props.currencies.data}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToBuy\"\r\n            initialCurrency=\"PLN\"\r\n            selectedCurrencies={this.props.selectedCurrencies}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (this.props.currencies.isProcessing || !this.props.currencies.isProcessed) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <PageLayout content={content} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  currencies,\r\n  selectedCurrencies,\r\n}) => ({\r\n  currencies,\r\n  selectedCurrencies,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadCurrencies,\r\n  setCurrencyValue,\r\n  convertCurrencies,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Converter);\r\n","import Home from '../containers/Home';\r\nimport Converter from '../containers/Converter';\r\n\r\nexport default [{\r\n  path: '/',\r\n  component: Home,\r\n  exact: true,\r\n}, {\r\n  path: '/converter',\r\n  component: Converter,\r\n  exact: true,\r\n}]\r\n","import React, { PureComponent } from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport routes from '../../routes';\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet\r\n          defaultTitle=\"Currency Calculator\"\r\n          title=\"Homepage\"\r\n          titleTemplate=\"%s | Currency Calculator\"\r\n        />\r\n        <Switch>\r\n          {routes.map(\r\n            (route, index) => <Route key={route.path || index} {...route} />)}\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport { ScrollContext } from 'react-router-scroll-4';\r\nimport './theme/index.scss';\r\nimport { createClientStore } from './redux/store';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createClientStore();\r\n\r\nReactDOM.render(\r\n  <ReduxProvider store={store}>\r\n    <HashRouter>\r\n      <ScrollContext>\r\n        <App />\r\n      </ScrollContext>\r\n    </HashRouter>\r\n  </ReduxProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2RqcC\",\"raise\":\"styles_raise__3m8gy\",\"primary\":\"styles_primary__2qAw0\",\"fullWidth\":\"styles_fullWidth__2zJvd\",\"gradientAnimation\":\"styles_gradientAnimation__sTVNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__wWuQV\",\"isDisabled\":\"styles_isDisabled__PXKe7\",\"gradientAnimation\":\"styles_gradientAnimation__3Cd-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comboBoxContainer\":\"styles_comboBoxContainer__3Tu3C\",\"selectWrapper\":\"styles_selectWrapper__1pvka\",\"inputWrapper\":\"styles_inputWrapper__1meRR\",\"gradientAnimation\":\"styles_gradientAnimation__2F96P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"converterContainer\":\"styles_converterContainer__1qTe4\",\"screenContainer\":\"styles_screenContainer__541Lo\",\"gradientAnimation\":\"styles_gradientAnimation__cEBX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"styles_pageContainer__3EdcK\",\"gradientAnimation\":\"styles_gradientAnimation__1M3Oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__dOVvq\",\"gradientAnimation\":\"styles_gradientAnimation__2zNFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencySelectorContainer\":\"styles_currencySelectorContainer__2kO6N\",\"gradientAnimation\":\"styles_gradientAnimation__hnqwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesCompareContainer\":\"styles_ratesCompareContainer__Xk4MQ\"};"],"sourceRoot":""}