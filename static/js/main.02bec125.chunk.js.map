{"version":3,"sources":["redux/modules/currencies.js","redux/modules/selectedCurrencies.js","helpers/convertCurrencies.js","redux/modules/index.js","redux/store.js","components/other/LoaderAnimation/index.js","components/layout/PageLayout/index.js","components/ui/Button/index.js","containers/Home/index.js","containers/Converter/pocketsMockup.js","containers/Converter/shapes.js","helpers/formatCurrencyValue.js","components/ui/SelectInput/shapes.js","components/ui/SelectInput/index.js","components/ui/Input/shapes.js","components/ui/Input/index.js","components/ui/ComboBox/index.js","containers/Converter/components/CurrencySelector/index.js","containers/Converter/components/RatesCompare/index.js","containers/Converter/index.js","routes/index.js","containers/App/index.js","serviceWorker.js","index.js","components/ui/Button/styles.module.scss","components/ui/Input/styles.module.scss","components/ui/ComboBox/styles.module.scss","components/other/LoaderAnimation/styles.module.scss","containers/Converter/styles.module.scss","components/layout/PageLayout/styles.module.scss","components/ui/SelectInput/styles.module.scss","containers/Converter/components/CurrencySelector/styles.module.scss","containers/Converter/components/RatesCompare/styles.module.scss"],"names":["LOAD_CURRENCIES","LOAD_CURRENCIES_SUCCESS","LOAD_CURRENCIES_FAIL","initialState","data","isProcessing","isProcessed","currencies","state","arguments","length","undefined","action","type","Object","objectSpread","currenciesData","keys","payload","rates","map","key","value","label","CONVERT_CURRENCIES","CONVERT_CURRENCIES_SUCCESS","CONVERT_CURRENCIES_FAIL","currencyToSell","amount","currencyToBuy","exchangeRate","rate","setInputValues","currencyType","convertCurrencies","types","request","url","params","symbols","concat","base","selectedCurrencies","_action$data","_action$data$amount","isCurrencyToSellType","isCurrencyToBuyLabelChanged","formattedAmount","currencyToSellStateAmount","convertedAmount","String","includes","toFixed","convertInputValues","currencyToSellAmount","_action$payload$data","currencyToBuyLabel","find","el","rootReducer","combineReducers","client","axios","create","baseURL","responseType","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","LoaderAnimation","_ref","isLoading","react_default","a","createElement","className","styles","loader","loaderDots","defaultProps","PageLayout","content","pageContainer","other_LoaderAnimation","Button","_classNames","children","disabled","fullWidth","primary","onClick","raiseOnInteraction","btnClassnames","classNames","defineProperty","btn","raise","Home","history","useEffect","document","body","classList","add","remove","Fragment","ui_Button","push","layout_PageLayout","pocketsMockup","PropTypes","shape","string","oneOfType","number","formatCurrencyValue","Number","Math","round","SelectInputDefaultProps","array","func","bool","options","onChange","placeholder","isDisabled","SelectInput","selectInputClassnames","inputContainer","react_select_esm","newValue","InputDefaultProps","Input","isError","formattedValue","inputClassnames","event","target","ComboBox","selectInput","input","comboBoxClassnames","comboBoxContainer","selectWrapper","ui_SelectInput","inputWrapper","ui_Input","CurrencySelector","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCurrencySelect","selectedCurrency","_this$props","updatedCurrencyData","updateCurrencyData","onAmountChange","currencyAmount","currencyData","setState","setCurrencyValue","getSelectedCurrencyValue","currency","getAvailableCurrencies","_this$props2","currencyTypeToFilter","filter","initialCurrency","prevProps","_this$props$selectedC","_prevProps$selectedCu","prevCurrencyToSell","prevCurrencyToBuy","_this$props3","title","currencySelectorClassnames","currencySelectorContainer","ui_ComboBox","Component","DEFAULT_REFRESH_TIME","RatesCompare","getCurrencyRates","isInitialConvert","interval","clearInterval","setInterval","renderCurrenciesRatio","_this$props$selectedC2","isDifferentCurrency","ratesCompareClassnames","ratesCompareContainer","Converter","loadCurrencies","converterContainer","screenContainer","components_CurrencySelector","availablePockets","components_RatesCompare","Helmet_default","mapDispatchToProps","dispatch","getState","newLabel","isCurrencyToSell","_state$selectedCurren","currencyToCompare","currenciesToConvert","toSell","toBuy","then","routes","path","component","exact","connect","withRouter","defaultTitle","titleTemplate","Switch","route","index","Route","assign","Boolean","location","hostname","match","store","preloadedState","createStore","applyMiddleware","axiosMiddleware","thunk","createClientStore","ReactDOM","render","es","HashRouter","react_router_scroll_4_es","containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","gradientAnimation","bounce_loader"],"mappings":"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","file":"static/js/main.02bec125.chunk.js","sourcesContent":["const LOAD_CURRENCIES = ' currencies/LOAD_CURRENCIES';\r\nconst LOAD_CURRENCIES_SUCCESS = 'currencies/LOAD_CURRENCIES_SUCCESS';\r\nconst LOAD_CURRENCIES_FAIL = 'currencies/LOAD_CURRENCIES_FAIL';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  isProcessing: false,\r\n  isProcessed: false,\r\n};\r\n\r\nconst currencies = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CURRENCIES:\r\n      return { ...state, isProcessing: true };\r\n    case LOAD_CURRENCIES_SUCCESS: {\r\n      const currenciesData = Object.keys(action.payload.data.rates)\r\n        .map(key => ({ value: action.payload.data.rates[key], label: key }));\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: true, data: currenciesData,\r\n      };\r\n    }\r\n    case LOAD_CURRENCIES_FAIL:\r\n      return {\r\n        ...state, isProcessing: false, isProcessed: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function loadCurrencies() {\r\n  return {\r\n    types: [LOAD_CURRENCIES, LOAD_CURRENCIES_SUCCESS, LOAD_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default currencies;\r\n","import convertInputValues from '../../helpers/convertCurrencies';\r\n\r\nconst SET_CURRENCY_DATA = 'selectedCurrencies/SET_CURRENCY_DATA';\r\nconst CONVERT_CURRENCIES = ' selectedCurrencies/CONVERT_CURRENCIES';\r\nconst CONVERT_CURRENCIES_SUCCESS = 'selectedCurrencies/CONVERT_CURRENCIES_SUCCESS';\r\nconst CONVERT_CURRENCIES_FAIL = 'selectedCurrencies/CONVERT_CURRENCIES_FAIL';\r\n\r\nconst CURRENCY_TO_SELL = 'currencyToSell';\r\n\r\nconst initialState = {\r\n  currencyToSell: {\r\n    label: '',\r\n    amount: '',\r\n  },\r\n  currencyToBuy: {\r\n    label: '',\r\n    amount: '',\r\n  },\r\n  exchangeRate: {\r\n    isProcessing: false,\r\n    isProcessed: false,\r\n    currencyToSell: {\r\n      label: '',\r\n      rate: 0,\r\n    },\r\n    currencyToBuy: {\r\n      label: '',\r\n      rate: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst selectedCurrencies = (state = initialState, action = {}) => {\r\n  const {\r\n    exchangeRate,\r\n    currencyToSell,\r\n    currencyToBuy,\r\n  } = state;\r\n\r\n  switch (action.type) {\r\n    case SET_CURRENCY_DATA: {\r\n      const { label, amount = '' } = action.data;\r\n      const isCurrencyToSellType = action.currencyType === CURRENCY_TO_SELL;\r\n      const isCurrencyToBuyLabelChanged = !isCurrencyToSellType && currencyToBuy.label !== label;\r\n      const formattedAmount = convertInputValues(\r\n        exchangeRate,\r\n        isCurrencyToSellType,\r\n        amount,\r\n        isCurrencyToBuyLabelChanged,\r\n        currencyToSell.amount,\r\n      );\r\n      const currencyToSellAmount = isCurrencyToBuyLabelChanged\r\n        ? currencyToSell.amount\r\n        : formattedAmount;\r\n      const getCurrenciesInputFormattedData = () => ({\r\n        currencyToSell: {\r\n          ...currencyToSell,\r\n          label: isCurrencyToSellType ? label : currencyToSell.label,\r\n          amount: isCurrencyToSellType ? amount : currencyToSellAmount,\r\n        },\r\n        currencyToBuy: {\r\n          ...currencyToBuy,\r\n          label: !isCurrencyToSellType ? label : currencyToBuy.label,\r\n          amount: (!isCurrencyToSellType && !isCurrencyToBuyLabelChanged)\r\n            ? amount\r\n            : formattedAmount,\r\n        },\r\n      });\r\n\r\n      return { ...state, ...getCurrenciesInputFormattedData() };\r\n    }\r\n    case CONVERT_CURRENCIES:\r\n      return { ...state, exchangeRate: { ...exchangeRate, isProcessing: true } };\r\n    case CONVERT_CURRENCIES_SUCCESS: {\r\n      const { rates, base } = action.payload.data;\r\n      const getCurrencyToBuyLabel = () => Object.keys(rates).find(el => el !== base);\r\n      const currencyToBuyLabel = getCurrencyToBuyLabel();\r\n\r\n      return {\r\n        ...state,\r\n        exchangeRate: {\r\n          isProcessing: false,\r\n          isProcessed: true,\r\n          currencyToSell: {\r\n            ...exchangeRate.currencyToSell,\r\n            label: base,\r\n            rate: rates[base],\r\n          },\r\n          currencyToBuy: {\r\n            ...exchangeRate.currencyToBuy,\r\n            label: currencyToBuyLabel,\r\n            rate: rates[currencyToBuyLabel],\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case CONVERT_CURRENCIES_FAIL:\r\n      return {\r\n        ...state,\r\n        exchangeRate: {\r\n          ...initialState.exchangeRate,\r\n          isProcessing: false,\r\n          isProcessed: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setInputValues = (currencyType, data) => ({\r\n  type: SET_CURRENCY_DATA,\r\n  currencyType,\r\n  data,\r\n});\r\n\r\nexport function convertCurrencies(currencyToSell, currencyToBuy) {\r\n  return {\r\n    types: [CONVERT_CURRENCIES, CONVERT_CURRENCIES_SUCCESS, CONVERT_CURRENCIES_FAIL],\r\n    payload: {\r\n      request: {\r\n        url: '/latest',\r\n        params: {\r\n          symbols: `${currencyToSell},${currencyToBuy}`,\r\n          base: currencyToSell,\r\n        },\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport const setCurrencyValue = (currencyType, data) => (dispatch, getState) => {\r\n  const state = getState();\r\n  const { label: newLabel } = data;\r\n  const isCurrencyToSell = currencyType === CURRENCY_TO_SELL;\r\n  const { currencyToSell, currencyToBuy } = state.selectedCurrencies.exchangeRate;\r\n  const currencyToCompare = isCurrencyToSell ? currencyToSell.label : currencyToBuy.label;\r\n  const isDifferentLabel = (currencyToSell.label && currencyToBuy.label)\r\n    && (currencyToCompare !== newLabel);\r\n\r\n  if (isDifferentLabel) {\r\n    const currenciesToConvert = {\r\n      toSell: isCurrencyToSell ? newLabel : currencyToSell.label,\r\n      toBuy: !isCurrencyToSell ? newLabel : currencyToBuy.label,\r\n    };\r\n\r\n    return dispatch(convertCurrencies(currenciesToConvert.toSell, currenciesToConvert.toBuy))\r\n      .then(() => dispatch(setInputValues(currencyType, data)));\r\n  }\r\n\r\n  return dispatch(setInputValues(currencyType, data));\r\n};\r\n\r\nexport default selectedCurrencies;\r\n","export default (\r\n  rates,\r\n  isCurrencyToSellType,\r\n  amount,\r\n  isCurrencyToBuyLabelChanged,\r\n  currencyToSellStateAmount,\r\n) => {\r\n  if (!amount) return '';\r\n  const { rate } = rates.currencyToBuy;\r\n  let convertedAmount;\r\n\r\n  if (isCurrencyToBuyLabelChanged) {\r\n    convertedAmount = currencyToSellStateAmount * rate;\r\n  }\r\n\r\n  if (isCurrencyToSellType && !isCurrencyToBuyLabelChanged) {\r\n    convertedAmount = amount * rate;\r\n  }\r\n\r\n  if (!isCurrencyToSellType && !isCurrencyToBuyLabelChanged) {\r\n    convertedAmount = amount / rate;\r\n  }\r\n\r\n  if (String(convertedAmount).includes('.')) return convertedAmount.toFixed(2);\r\n\r\n  return convertedAmount;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport currencies from './currencies';\r\nimport selectedCurrencies from './selectedCurrencies';\r\n\r\nconst rootReducer = combineReducers({\r\n  currencies,\r\n  selectedCurrencies,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport axios from 'axios';\r\nimport thunk from 'redux-thunk';\r\nimport axiosMiddleware from 'redux-axios-middleware';\r\nimport rootReducer from './modules';\r\n\r\nconst client = axios.create({\r\n  baseURL: 'https://api.exchangeratesapi.io/',\r\n  responseType: 'json',\r\n});\r\n\r\nconst composeEnhancers =\r\n  (  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ) ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nexport const createClientStore = (preloadedState = {}) => {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(axiosMiddleware(client), thunk)),\r\n  );\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.scss';\n\nconst LoaderAnimation = ({ isLoading }) => {\n  if (!isLoading) return null;\n\n  return (\n    <div className={styles.loader}>\n      <div className={styles.loaderDots} />\n    </div>\n  );\n};\n\nLoaderAnimation.defaultProps = {\n  isLoading: true,\n};\n\nLoaderAnimation.propTypes = {\n  isLoading: PropTypes.bool,\n};\n\nexport default LoaderAnimation;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LoaderAnimation from '../../other/LoaderAnimation';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst PageLayout = ({ content, isLoading }) => (\r\n  <div className={styles.pageContainer}>\r\n    {isLoading ? <LoaderAnimation isLoading={isLoading} /> : content}\r\n  </div>\r\n);\r\n\r\nPageLayout.propTypes = {\r\n  content: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]).isRequired,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nPageLayout.defaultProps = {\r\n  isLoading: false,\r\n};\r\n\r\nexport default PageLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Button = (\r\n  {\r\n    children,\r\n    disabled,\r\n    fullWidth,\r\n    primary,\r\n    onClick,\r\n    raiseOnInteraction,\r\n  },\r\n) => {\r\n  const btnClassnames = classNames({\r\n    [styles.btn]: true,\r\n    [styles.primary]: primary,\r\n    [styles.disabled]: disabled,\r\n    [styles.fullWidth]: fullWidth,\r\n    [styles.raise]: raiseOnInteraction,\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className={btnClassnames}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n  primary: PropTypes.bool,\r\n  raiseOnInteraction: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  fullWidth: false,\r\n  primary: false,\r\n  raiseOnInteraction: false,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport Button from '../../components/ui/Button';\r\n\r\nconst CONVERTER_URL = '/converter';\r\n\r\nconst Home = ({ history }) => {\r\n  useEffect(() => {\r\n    document.body.classList.add('animatedBg');\r\n\r\n    return () => {\r\n      document.body.classList.remove('animatedBg');\r\n    };\r\n  });\r\n\r\n  const content = (\r\n    <>\r\n      <h1>Ladies and gentlemen...</h1>\r\n      <p>I would like to present you the currencies converter!</p>\r\n      <Button\r\n        raiseOnInteraction\r\n        primary\r\n        onClick={() => history.push(CONVERTER_URL)}\r\n      >\r\n        SEE THE DEVICE\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <PageLayout content={content} />\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\r\n};\r\n\r\nexport default Home;\r\n","export default [{\r\n  label: 'USD',\r\n  value: 1210,\r\n}, {\r\n  label: 'PLN',\r\n  value: 2847,\r\n}, {\r\n  label: 'SEK',\r\n  value: 60689,\r\n}, {\r\n  label: 'GBP',\r\n  value: 56,\r\n}, {\r\n  label: 'MXN',\r\n  value: 3200,\r\n}, {\r\n  label: 'THB',\r\n  value: 269200,\r\n}, {\r\n  label: 'CZK',\r\n  value: 6200,\r\n}];\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const selectedCurrenciesShapes = {\r\n  currencyToSell: PropTypes.shape({\r\n    label: PropTypes.string,\r\n    amount: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n  currencyToBuy: PropTypes.shape({\r\n    label: PropTypes.string,\r\n    amount: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n};\r\n","export default (value) => {\r\n  if (!value || Number(value) <= 0) return '';\r\n\r\n  return Math.round(value * 100) / 100;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  options: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  isDisabled: PropTypes.bool,\r\n  value: PropTypes.shape({\r\n    label: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n};\r\n\r\nexport const SelectInputDefaultProps = {\r\n  options: [],\r\n  onChange: () => {},\r\n  placeholder: '',\r\n  isDisabled: true,\r\n  value: {\r\n    label: '',\r\n    value: '',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Select from 'react-select';\r\n\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from './shapes';\r\nimport styles from './styles.module.scss';\r\n\r\nconst SelectInput = (\r\n  {\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    value,\r\n    isDisabled,\r\n  },\r\n) => {\r\n  const selectInputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n  });\r\n\r\n  return (\r\n    <div className={selectInputClassnames}>\r\n      <Select\r\n        options={options}\r\n        onChange={newValue => onChange(newValue)}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        isDisabled={isDisabled}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = { ...SelectInputPropTypes };\r\nSelectInput.defaultProps = { ...SelectInputDefaultProps };\r\n\r\nexport default SelectInput;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n  isDisabled: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport const InputDefaultProps = {\r\n  onChange: () => {},\r\n  value: '',\r\n  isDisabled: true,\r\n  placeholder: '',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport InputPropTypes, { InputDefaultProps } from './shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst Input = (\r\n  {\r\n    onChange,\r\n    isError,\r\n    type,\r\n    value: formattedValue,\r\n    placeholder,\r\n    isDisabled,\r\n  },\r\n) => {\r\n  const inputClassnames = classNames({\r\n    [styles.inputContainer]: true,\r\n    [styles.isError]: isError,\r\n    [styles.isDisabled]: isDisabled,\r\n  });\r\n\r\n  const onInputChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    return onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={inputClassnames}>\r\n      <input\r\n        onChange={onInputChange}\r\n        value={formattedValue}\r\n        placeholder={placeholder}\r\n        disabled={isDisabled}\r\n        type={type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = { ...InputPropTypes };\r\nInput.defaultProps = { ...InputDefaultProps };\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport SelectInput from '../SelectInput';\r\nimport Input from '../Input';\r\nimport InputPropTypes, { InputDefaultProps } from '../Input/shapes';\r\nimport SelectInputPropTypes, { SelectInputDefaultProps } from '../SelectInput/shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst ComboBox = (\r\n  {\r\n    selectInput,\r\n    input,\r\n  },\r\n) => {\r\n  const comboBoxClassnames = classNames({\r\n    [styles.comboBoxContainer]: true,\r\n  });\r\n\r\n  return (\r\n    <div className={comboBoxClassnames}>\r\n      <div className={styles.selectWrapper}>\r\n        <SelectInput {...selectInput} />\r\n      </div>\r\n      <div className={styles.inputWrapper}>\r\n        <Input {...input} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComboBox.propTypes = {\r\n  selectInput: PropTypes.shape(SelectInputPropTypes),\r\n  input: PropTypes.shape(InputPropTypes),\r\n};\r\n\r\nComboBox.defaultProps = {\r\n  selectInput: SelectInputDefaultProps,\r\n  input: InputDefaultProps,\r\n};\r\n\r\nexport default ComboBox;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { selectedCurrenciesShapes } from '../../shapes';\r\nimport formatCurrencyValue from '../../../../helpers/formatCurrencyValue';\r\nimport ComboBox from '../../../../components/ui/ComboBox';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass CurrencySelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.currencies = this.getAvailableCurrencies();\r\n    this.state = {\r\n      selectedCurrency: props.initialCurrency,\r\n      currencyData: {\r\n        label: props.initialCurrency,\r\n        amount: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrencyValue(this.props.currencyType, this.state.currencyData);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      selectedCurrencies: {\r\n        currencyToSell,\r\n        currencyToBuy,\r\n      },\r\n    } = this.props;\r\n    const {\r\n      currencyToSell: prevCurrencyToSell,\r\n      currencyToBuy: prevCurrencyToBuy,\r\n    } = prevProps.selectedCurrencies;\r\n    if (currencyToSell.label !== prevCurrencyToSell.label\r\n      || currencyToBuy.label !== prevCurrencyToBuy.label) {\r\n      this.currencies = this.getAvailableCurrencies();\r\n    }\r\n  }\r\n\r\n  onCurrencySelect = (selectedCurrency) => {\r\n    const { selectedCurrencies, currencyType } = this.props;\r\n    const updatedCurrencyData = {\r\n      amount: selectedCurrencies[currencyType].amount,\r\n      label: selectedCurrency.label,\r\n    };\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n  }\r\n\r\n  onAmountChange = (currencyAmount) => {\r\n    const formattedAmount = formatCurrencyValue(currencyAmount);\r\n    const updatedCurrencyData = { ...this.state.currencyData, amount: formattedAmount };\r\n\r\n    this.updateCurrencyData(updatedCurrencyData);\r\n  }\r\n\r\n  updateCurrencyData = (updatedCurrencyData) => {\r\n    this.setState({\r\n      currencyData: updatedCurrencyData,\r\n      selectedCurrency: updatedCurrencyData.label,\r\n    });\r\n\r\n    this.props.setCurrencyValue(this.props.currencyType, updatedCurrencyData);\r\n  }\r\n\r\n  getSelectedCurrencyValue = () => (\r\n    this.props.currencies.find(currency => currency.label === this.state.selectedCurrency)\r\n  )\r\n\r\n  getAvailableCurrencies = () => {\r\n    const { currencies, selectedCurrencies, currencyType } = this.props;\r\n    const currencyTypeToFilter = currencyType === 'currencyToSell'\r\n      ? 'currencyToBuy'\r\n      : 'currencyToSell';\r\n\r\n    return this.currencies = currencies.filter(currency => (\r\n      currency.label !== selectedCurrencies[currencyTypeToFilter].label\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const isDisabled = this.state.selectedCurrency.length === 0;\r\n    const { title, currencyType, selectedCurrencies } = this.props;\r\n    const currencySelectorClassnames = classNames({\r\n      [styles.currencySelectorContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={currencySelectorClassnames}>\r\n        {title && <p>{title}:</p>}\r\n        <ComboBox\r\n          selectInput={{\r\n            options: this.currencies,\r\n            onChange: this.onCurrencySelect,\r\n            placeholder: 'Select currency...',\r\n            value: this.getSelectedCurrencyValue(),\r\n            isDisabled,\r\n          }}\r\n          input={{\r\n            onChange: this.onAmountChange,\r\n            type: 'number',\r\n            value: selectedCurrencies[currencyType].amount,\r\n            isDisabled,\r\n            placeholder: 'Currency amount...',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCurrencySelector.propTypes = {\r\n  selectedCurrencies: PropTypes.shape({\r\n    ...selectedCurrenciesShapes,\r\n  }).isRequired,\r\n  currencies: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\r\n  setCurrencyValue: PropTypes.func.isRequired,\r\n  initialCurrency: PropTypes.string.isRequired,\r\n  currencyType: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nCurrencySelector.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport LoaderAnimation from '../../../../components/other/LoaderAnimation';\r\nimport { selectedCurrenciesShapes } from '../../shapes';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst DEFAULT_REFRESH_TIME = 10000;\r\n\r\nclass RatesCompare extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      selectedCurrencies: {\r\n        currencyToSell,\r\n        currencyToBuy,\r\n      },\r\n    } = this.props;\r\n    const {\r\n      currencyToSell: prevCurrencyToSell,\r\n      currencyToBuy: prevCurrencyToBuy,\r\n    } = prevProps.selectedCurrencies;\r\n    const isDifferentCurrency = (currencyToSell.label !== prevCurrencyToSell.label)\r\n      || (currencyToBuy.label !== prevCurrencyToBuy.label);\r\n\r\n    const isInitialConvert = !prevCurrencyToSell.label\r\n      && !prevCurrencyToBuy.label\r\n      && currencyToSell.label\r\n      && currencyToBuy.label;\r\n\r\n    if (isDifferentCurrency) this.getCurrencyRates(isInitialConvert);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  getCurrencyRates = (isInitialConvert) => {\r\n    const {\r\n      convertCurrencies,\r\n      selectedCurrencies: {\r\n        currencyToSell,\r\n        currencyToBuy,\r\n      },\r\n    } = this.props;\r\n\r\n    if (isInitialConvert) {\r\n      convertCurrencies(currencyToSell.label, currencyToBuy.label);\r\n    }\r\n    if (this.interval) clearInterval(this.interval);\r\n\r\n    this.interval = setInterval(() => {\r\n      convertCurrencies(currencyToSell.label, currencyToBuy.label);\r\n    }, DEFAULT_REFRESH_TIME);\r\n  }\r\n\r\n  renderCurrenciesRatio = (data) => {\r\n    const {\r\n      currencyToSell,\r\n      currencyToBuy,\r\n      isProcessing,\r\n      isProcessed,\r\n    } = data;\r\n    if (!isProcessing && !isProcessed) return null;\r\n    if (isProcessing) return <LoaderAnimation isLoading />;\r\n\r\n    return (\r\n      <span>\r\n        {`${currencyToSell.rate} ${currencyToSell.label} = ${currencyToBuy.rate} ${currencyToBuy.label}`}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const ratesCompareClassnames = classNames({\r\n      [styles.ratesCompareContainer]: true,\r\n    });\r\n\r\n    return (\r\n      <div className={ratesCompareClassnames}>\r\n        {this.renderCurrenciesRatio(this.props.selectedCurrencies.exchangeRate)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRatesCompare.propTypes = {\r\n  selectedCurrencies: PropTypes.shape({\r\n    ...selectedCurrenciesShapes,\r\n    exchangeRate: PropTypes.shape({\r\n      isProcessing: false,\r\n      isProcessed: false,\r\n      ...selectedCurrenciesShapes,\r\n    }),\r\n  }).isRequired,\r\n  convertCurrencies: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RatesCompare;\r\n","import React, { Component } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { selectedCurrenciesShapes } from './shapes';\r\n\r\nimport { loadCurrencies } from '../../redux/modules/currencies';\r\nimport { setCurrencyValue, convertCurrencies } from '../../redux/modules/selectedCurrencies';\r\nimport PageLayout from '../../components/layout/PageLayout';\r\nimport availablePockets from './pocketsMockup';\r\n\r\nimport CurrencySelector from './components/CurrencySelector';\r\nimport RatesCompare from './components/RatesCompare';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass Converter extends Component {\r\n  componentDidMount() {\r\n    this.props.loadCurrencies();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedCurrencies,\r\n      currencies,\r\n    } = this.props;\r\n    const content = (\r\n      <div className={styles.converterContainer}>\r\n        <div className={styles.screenContainer}>\r\n          <CurrencySelector\r\n            title=\"Your currency pockets\"\r\n            currencies={availablePockets}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToSell\"\r\n            initialCurrency=\"USD\"\r\n            selectedCurrencies={selectedCurrencies}\r\n          />\r\n          <RatesCompare\r\n            selectedCurrencies={selectedCurrencies}\r\n            convertCurrencies={this.props.convertCurrencies}\r\n          />\r\n          <CurrencySelector\r\n            title=\"Available currencies to buy\"\r\n            currencies={currencies.data}\r\n            setCurrencyValue={this.props.setCurrencyValue}\r\n            currencyType=\"currencyToBuy\"\r\n            initialCurrency=\"PLN\"\r\n            selectedCurrencies={selectedCurrencies}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (!currencies.isProcessing && !currencies.isProcessed) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Helmet title=\"Convert it!\" />\r\n        <PageLayout content={content} isLoading={currencies.isProcessing} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nConverter.propTypes = {\r\n  setCurrencyValue: PropTypes.func.isRequired,\r\n  convertCurrencies: PropTypes.func.isRequired,\r\n  loadCurrencies: PropTypes.func.isRequired,\r\n  selectedCurrencies: PropTypes.shape({\r\n    ...selectedCurrenciesShapes,\r\n  }).isRequired,\r\n  currencies: PropTypes.shape({\r\n    data: PropTypes.array,\r\n    isProcessing: PropTypes.bool,\r\n    isProcessed: PropTypes.bool,\r\n  }).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  currencies,\r\n  selectedCurrencies,\r\n}) => ({\r\n  currencies,\r\n  selectedCurrencies,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loadCurrencies,\r\n  setCurrencyValue,\r\n  convertCurrencies,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Converter);\r\n","import Home from '../containers/Home';\r\nimport Converter from '../containers/Converter';\r\n\r\nexport default [{\r\n  path: '/',\r\n  component: Home,\r\n  exact: true,\r\n}, {\r\n  path: '/converter',\r\n  component: Converter,\r\n  exact: true,\r\n}]\r\n","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport routes from '../../routes';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Helmet\r\n      defaultTitle=\"Currency Calculator\"\r\n      title=\"Homepage\"\r\n      titleTemplate=\"%s | Currency Calculator\"\r\n    />\r\n    <Switch>\r\n      {\r\n        routes.map((route, index) => <Route key={route.path || index} {...route} />)\r\n      }\r\n    </Switch>\r\n  </>\r\n);\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport { ScrollContext } from 'react-router-scroll-4';\r\nimport './theme/index.scss';\r\nimport { createClientStore } from './redux/store';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createClientStore();\r\n\r\nReactDOM.render(\r\n  <ReduxProvider store={store}>\r\n    <HashRouter>\r\n      <ScrollContext>\r\n        <App />\r\n      </ScrollContext>\r\n    </HashRouter>\r\n  </ReduxProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2RqcC\",\"raise\":\"styles_raise__3m8gy\",\"primary\":\"styles_primary__2qAw0\",\"fullWidth\":\"styles_fullWidth__2zJvd\",\"gradientAnimation\":\"styles_gradientAnimation__sTVNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__wWuQV\",\"isDisabled\":\"styles_isDisabled__PXKe7\",\"gradientAnimation\":\"styles_gradientAnimation__3Cd-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comboBoxContainer\":\"styles_comboBoxContainer__3Tu3C\",\"selectWrapper\":\"styles_selectWrapper__1pvka\",\"inputWrapper\":\"styles_inputWrapper__1meRR\",\"gradientAnimation\":\"styles_gradientAnimation__2F96P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__MDTWx\",\"loaderDots\":\"styles_loaderDots__1_EoY\",\"bounce_loader\":\"styles_bounce_loader__oy-Gr\",\"gradientAnimation\":\"styles_gradientAnimation__HFx3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"converterContainer\":\"styles_converterContainer__1qTe4\",\"screenContainer\":\"styles_screenContainer__541Lo\",\"gradientAnimation\":\"styles_gradientAnimation__cEBX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"styles_pageContainer__3EdcK\",\"gradientAnimation\":\"styles_gradientAnimation__1M3Oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"styles_inputContainer__dOVvq\",\"gradientAnimation\":\"styles_gradientAnimation__2zNFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencySelectorContainer\":\"styles_currencySelectorContainer__2kO6N\",\"gradientAnimation\":\"styles_gradientAnimation__hnqwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesCompareContainer\":\"styles_ratesCompareContainer__Xk4MQ\",\"gradientAnimation\":\"styles_gradientAnimation__15KmJ\"};"],"sourceRoot":""}